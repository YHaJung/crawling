category,contents,language,lectureLink,lectureName,lecturer,level,numOfLectures,price,rating,siteIdx,subCategory,thumbnail,totalDuration,type
,"Thinking Reactively with RxJS Course IntroUse reactive, RxJS based solutions for complex problemsBreak down a requirement into small problemsPipe events to numbers and maintain a running count using the scan operatorCreate safe and predictable observable abstractionsMaintain shared observable state using the scan and shareReplay operatorsUse the filter and pairwise operators to determine when to show and hide the spinnerBuild an observable from a simple english requirementExpose complex reactive code as simple function based APIsEncapsulate complex imperative logic in a simple observableExtend Your Reactive Logic in RxJS using Observable-like Proxies that Delay or Drop EventsUse RxJS combineLatest to Only Emit Notifications When Certain Events Have HappenedMaintain Self-resetting State in Your Observable Streams using the RxJS scan OperatorBuild an Event Combo Observable with RxJSUse RxJS exhaustMap to Wait for Open Combos to Finish Before Starting New OnesSimplify Usage of Your Reactive Service by Building an RxJS Operator to Manage It For YouExtend Promises by Adding Custom Behavior",en,https://egghead.io/courses/thinking-reactively-with-rxjs,Thinking Reactively with RxJS,Rares Matei,6,17,-1,4.6,8,RxJS,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/447/thumb/EGH_ThinkingRxJs.png,62,on
,Course Intro and OverviewEliminate Boolean Explosion by Enumerating StatesReplace Enumerated States with a State MachineUse an Interpreter to Instantiate a MachineUse XState Viz to Visually Develop and Test Your MachineAdd Actions to Transitions to Fire Side EffectsTrigger Actions When Entering and Exiting a XState StateReplace Inline Functions with String ShorthandsUse Internal Transitions in XState to Avoid State Exit and Re-EntrySend Events to the Machine with the XState Send Action CreatorTrack Infinite States with with XState ContextHow Action Order Affects Assigns to Context in a XState MachineUse Activities in XState to Run Ongoing Side EffectsConditionally Transition to States with Guards in XStateSimplify State Explosion in XState through Hierarchical StatesMultiple Simultaneous States with Parallel StatesRecall Previous States with XState History States NodesUse XState Null Events and Transient Transitions to Immediately Transition StatesDelay XState Events and TransitionsInvoking a Promise for Asynchronous State Transitions in XStateInvoke Callbacks to Send and Receive Events from a Parent XState MachineInvoke Child XState Machines from a Parent Machine,en,https://egghead.io/courses/introduction-to-state-machines-using-xstate,Introduction to State Machines Using XState,Kyle Shevlin,6,22,-1,4.6,8,"XState,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/403/thumb/IntroxState_1000.png,52,on
,"Change a Commit Message that Hasn't Been Pushed YetAdd More Files and Changes to a Commit Before PushingRemove Files from Staging Before CommittingRemove Changes from a Commit Before PushingUse and Compare the Different git Reset Options: --hard, --soft, and --mixedRecover Local Changes from `git reset --hard` with `git reflog`Undo a Commit that has Already Been PushedPush a New Branch to github that Doesn't Exist Remotely YetCopy a Commit from One Branch to AnotherMove a Commit that was Committed on the Wrong BranchUse `git stash` to Save Local Changes While PullingExplore Old Commits with a Detached HEAD, and then RecoverFix a Pull Request that has a Merge ConflictCleanup and Delete Branches After a Pull RequestChange the Commit Message of a Previous Commit with Interactive Rebasegit Ignore a File that has Already been Committed and PushedAdd a File to a Previous Commit with Interactive RebaseFix Merge Conflicts While Changing Commits During an Interactive RebaseSquash Commits Before they are Pushed with Interactive RebaseCompletely Remove a File from Pushed git History",en,https://egghead.io/courses/fix-common-git-mistakes,Fix Common Git Mistakes,Chris Achard,6,20,-1,4.7,8,git,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/401/thumb/GitMistakes_1000.png,44,on
,Course Overview: Web Security EssentialsSimulate Man in the Middle Attacks and Inspect Network Traffic with Charles ProxyAdd https to a Localhost Express App to Prevent MITM AttacksRedirect All HTTP Traffic to HTTPS in Express to Ensure All Responses are SecureSet the Secure Cookie Flag to Ensure Cookies are Only Sent Over Secure ConnectionsAdd HSTS Headers to Express Apps to Ensure All Requests are https RequestsCreate a Proof of Concept Exploit of a CSRF Vulnerable WebsiteMitigate CSRF Attacks by Setting the SameSite Cookie Flag in ExpressAdd CSRF Token Middleware to an Express Server to Mitigate CSRFMake an XSS Payload to Read a Cookie from a Vulnerable Website Set the httpOnly Cookie Flag in Express to Ensure Cookies are Inaccessible from JavaScriptMake an XSS Payload to Read document.body from a Vulnerable WebsitePrevent Inline Script Execution by Implementing Script-Src CSP Headers in ExpressRead Document Content from a Vulnerable Website via Script Tag Injection in an XSS PayloadAdd a Nonce Based script-src Header in Express to Only Allow Scripts that Match the NoncePrompt Users for Credentials from a Vulnerable Website via iframe InjectionAdd a default-src CSP Header in Express to Enforce an Allowlist and Mitigate XSS,en,https://egghead.io/courses/web-security-essentials-mitm-csrf-and-xss,"Web Security Essentials: MITM, CSRF, and XSS",Mike Sherov,6,17,-1,4.6,8,"Express,Node.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/413/thumb/EGH_WebSecurity.png,50,on
,"A Beginners Guide to React IntroductionCreate a User Interface with Vanilla JavaScript and DOMCreate a User Interface with React¡¯s createElement APICreate a User Interface with React¡¯s JSX syntaxUse JSX effectively with ReactRender two elements side-by-side with React FragmentsCreate a Simple Reusable React ComponentValidate Custom React Component Props with PropTypesUnderstand and Use Interpolation in JSXRerender a React ApplicationStyle React Components with className and inline Styles
Use Event Handlers with React
Manage state in a React Component with the useState hook
Manage side-effects in a React Component with the useEffect hook
Use a lazy initializer with useStateManage the useEffect dependency arrayCreate reusable custom hooksManipulate the DOM with React refsUnderstand the React Hook FlowMake Basic Forms with ReactMake Dynamic Forms with ReactControlling Form Values with ReactUsing React Error Boundaries to handle errors in React ComponentsUse the key prop when Rendering a List with ReactLifting and colocating React StateMake HTTP Requests with ReactHandle HTTP Errors with ReactInstall and use React DevToolsBuild and deploy a React Application with Codesandbox, GitHub, and NetlifyA Beginners Guide to React Outro",en,https://egghead.io/courses/the-beginner-s-guide-to-react,The Beginner's Guide to React,Kent C. Dodds,6,30,-1,4.6,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/160/thumb/EGH_BeginnersReact2.png,147,on
,Introduction to the in-depth Immer courseCapture Application Logic in Pure Functions to Create Immutable StateSimplify Deep State Updates using Immer produceRender Immutable Data using ReactProfile React Rendering and Optimize with memo to Leverage Structural SharingSimplify Immer Producer Functions using CurryingProduces Immutable Data and Avoid Unnecessary Creation of New Data Trees with ImmerImmutable Update State inside React components with useImmerReturn Completely New State from an Immer ProducerAvoid Accidental Returns of New State by using the void KeywordWrite Asynchronous Producers in Immer and Why You Shouldn¡¯tType Immutable Immer Data with TypeScriptUpdate Immutable State with React useReducer through ImmerCapture Patches to Distribute Changes in App State with Immer produceWithPatchesCreate a Simple WebSocket Server to Distribute Patches from ImmerApply Patches using Immer applyPatches to Synchronize State across ClientsCreate Stable Patches in Immer by updating with Id instead of IndicesCompress the Immer Patch History by Replaying Patches on a setIntervalUse Immer inversePatches to Build Undo FunctionalityUse Immer Patches to Build Redo Functionality,en,https://egghead.io/courses/immutable-javascript-data-structures-with-immer,Immutable JavaScript Data Structures with Immer,Michel Weststrate,6,20,-1,4.8,8,"React,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/312/thumb/ImmuateableImmer_Final.png,58,on
,Send a Query with GraphQL PlaygroundQuery a List of Objects with GraphQLQuery an Enumeration Type with GraphQLSend a Nested GraphQL QueryFilter a GraphQL Query Result Using ArgumentsRenaming Fields with GraphQL AliasesUse Variables to Filter a Query Result with GraphQLQuery Connected Data with the GraphQL Query LanguageCreate Operation Names for GraphQL Queries Use an Input Type to Create an Account with a GraphQL Mutation Authenticate a User with a GraphQL MutationSend a checkOut Mutation with GraphQL as an Authorized UserChange Check In Status with a GraphQL MutationReuse GraphQL Selection Sets with FragmentsExplore Refactored GraphQL QueriesQuery GraphQL Interface Types in GraphQL PlaygroundQuery Lists of Multiple Types using a Union in GraphQLListen for Data Changes in Real-time with a GraphQL SubscriptionQuery a GraphQL API's Types With Introspection Queries,en,https://egghead.io/courses/graphql-query-language,GraphQL Query Language,Eve Porcello,6,19,-1,4.7,8,GraphQL,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/236/thumb/EGH_GraphQLQuery_Final.png,30,on
,"Intro to Advanced JavaScript Foundations Working with Primitive TypesAutoboxing Primitive Types in JavaScriptUnderstanding Prototypal Inheritance within JavaScriptUnderstanding the difference between .prototype and .__proto__ in JavaScriptWorking with var, let, const, and block scopesImplicit Binding of the ""this"" KeywordArrow Functions and Lexical Scoping ""this""Explicit binding of the ""this"" keywordPrivate Variables with IIFEsUse Implicit and Explicit Coercion in JavaScriptDe-sugar an ES6 Class and the Extends Keyword  ES6 Class Constructors and the Super KeywordWorking with Static Properties on a ClassHow to use 'strict mode'WTF is a Closure? ",en,https://egghead.io/courses/advanced-javascript-foundations,Advanced JavaScript Foundations,Tyler Clark,6,16,-1,4.5,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/353/thumb/foundation.png,41,on
,Install RustCompile and run a Rust program from scratchCreate a Rust package with the Cargo package managerCompile and run a Rust program using CargoVariables and Mutability in RustOutput multiple variables using println!() in RustWrite and call a function in RustUnderstanding basic Ownership and Borrowing in RustRead user input from stdin in RustHandle errors with unwrap() in RustHandle errors in Rust using expect()Handle errors in Rust using Pattern MatchingExit a program using std::process in RustCreate a loop in RustMake your Rust code more DRY,en,https://egghead.io/courses/write-your-first-program-with-the-rust-language,Write Your First Program with the Rust Language,Pascal Precht,6,15,-1,4.2,8,Rust,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/448/thumb/EGH_BuildaRustApp_Final.png,19,on
,Course Intro for Designing GraphQL Schemas Setup an Apollo GraphQL Server with automatic Mocking Kicking off a GraphQL Schema Design ProcessNaming Conventions for Query Fields in GraphQLWhen and Why to use Nullable vs Non-nullable Fields in GraphQLEvolving a GraphQL Schema incl. Breaking Changes without affecting a Single UserNaming Conventions for Fields with GraphQL Aliases in MindPaginate Entries using the Connection SpecificationExtending GraphQL Connections with additional Fields and ArgumentsNaming top-level Query Fields in GraphQLMutation Input and Payload Structure in GraphQLDesign GraphQL Mutations by focusing on the Domain rather than the Data Model Optimising GraphQL Mutations for Static UsageGraphQL Mutations to update ConnectionsTradeoffs when designing GraphQL Mutations to update multiple Properties on one EntityCourse Outro for Designing GraphQL Schemas,en,https://egghead.io/courses/designing-graphql-schemas-99db,Designing GraphQL Schemas,Nik Graf,6,16,-1,4.5,8,GraphQL,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/405/thumb/DesignGraphQLSchemas.png,56,on
,Set up ESLint to Audit Accessibility Issues in ReactUse react-axe to Audit Accessibility Issues at Runtime during DevelopmentUse the axe Browser Extension to Audit a Web Page for Accessibility IssuesUse tota11y to Visualize Accessibility IssuesUse a High Contrast Browser Extension to Find Color Contrast Accessibility IssuesChange Display Preferences on Mac to Find Color Contrast Accessibility IssuesEnable High Contrast Mode on WindowsAccess and Customize VoiceOver Settings on MacOSNavigate a Webpage with VoiceOver in SafariTest for Landmark Region Accessibility Issues in ReactDefine Landmark Regions of a web page using ARIA rolesDefine Landmark Regions of a web page using HTML5 sectioning elementsTest for Heading Level Accessibility IssuesCorrectly Define Heading Levels of a Web PageTest for Form Control Label Accessibility IssuesEnsure Form Controls have Accessible LabelsAdd Accessible Labels to Elements Whose Labels are Not Clear EnoughAdd Accessible Labels to Provide Elements with More ContextAdd an Accessible Label to an Element from the Text of Other ElementsAdd Accessible Descriptions to ElementsTest for Image Alternative Text Accessibility IssuesDefine Images with Appropriate Text AlternativesTest for Insufficient Color Contrast Accessibility IssuesUse Sufficient Color Contrast in Web Page DesignUse More than Color Alone to Convey Information in a Web PageDefine a Live Region to Ensure Dynamic Changes are Announced by Assistive TechnologiesAppropriately Set the Focus on Each Page Load of a Web ApplicationWTF are Accessible Design Patterns?,en,https://egghead.io/courses/develop-accessible-web-apps-with-react,Develop Accessible Web Apps with React,Erin Doyle,6,28,-1,4.7,8,"React,Screen Reader,ARIA,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/412/thumb/AccessibleReact_1000.png,88,on
,Build a Page Layout in GatsbyCreate a React Form in GatsbyGenerate Dynamic Routes in Gatsby with Reach RouterManage Application State in Gatsby with React HooksGenerate an Access Token for Users with Twilio Serverless FunctionsConsume a Generated Twilio Token in Gatsby with React HooksRestrict Access in Gatsby with Protected RoutesConnect Video to a Room with React Hooks in GatsbyShow Video in Gatsby from Remote Participants with React HooksHandle Disconnected Participants with React Hooks and the Twilio API,en,https://egghead.io/courses/build-a-video-chat-app-with-twilio-and-gatsby,Build a Video Chat App with Twilio and Gatsby,Jason Lengstorf,6,10,-1,4.6,8,Gatsby,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/395/thumb/TwilioGatsby_Final.png,47,on
,Course IntroEnable React Concurrent ModeFetch Data with React SuspenseHandle React Suspense Errors with an Error BoundaryWrite a generic React Suspense Resource factoryRefactor data fetching with useEffect to Suspense ResourcesWhere to Position React Suspense and Error BoundariesImprove Suspense loading states with useTransitionUse CSS Transitions to Avoid a Flash of Loading StateModify Suspense Config to Avoid a Flash of Loading StateCache React Suspense ResourcesPreload Images to Improve Loading PerformanceCreate a Custom Suspending Image ComponentImplement the Fetch as you Render Approach for Improved PerformanceCreate a Custom Hook that Creates ResourcesUse SuspenseList for Coordinating Suspending ComponentsFetch Modules Eagerly for SuspenseListWrapping Up with Experimental React Suspense,en,https://egghead.io/courses/use-suspense-to-simplify-your-async-ui,Use Suspense to Simplify Your Async UI,Kent C. Dodds,6,18,-1,4.7,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/400/thumb/SuspenseAsyncUI_1000.png,77,on
,Introducing Construct Sturdy UIs with XStateHandle http request state with XStateInvoke an XState Service when Entering a StateBlock a State Transition with a GuardControl Transitions Order with Parallel StatesCommunicate between State Machines in Different ComponentsSave Previous States with a History StateExecute Code when Entering and Exiting States using Activities,en,https://egghead.io/courses/construct-sturdy-uis-with-xstate,Construct Sturdy UIs with XState,Isaac Mann,6,8,-1,4.5,8,XState,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/402/thumb/State_Machine.png,34,on
,"Build an App with React Suspense: Intro and SetupImport Components Lazily with Suspense React.lazyCatch Errors with a React Error Boundary ComponentUnderstand How React.lazy Communicates Loading Status to Suspense and Error BoundariesWrap Fetch Requests to Communicate Pending, Error and Success Status to React SuspenseSeparate API Utility Functions from React ComponentsTrack Async Requests with React's useState HookEnable Suspense Features with Experimental Concurrent Mode using ReactDOM.createRootDe-prioritize NonUser-Blocking Updates with React useTransition's startTransition FunctionBypass Receded Views with React useTransition's timeoutMs OptionDisplay Loading States Conditionally with React.useTransition's isPending BooleanDelay the Appearance of a Loading Spinner with CSS in ReactGet Previous Resource Values with React¡¯s useDeferredState HookHoist React Component StateAvoid this Common Suspense Gotcha in by Reading Data From ComponentsCoordinate Fallback Rendering with the React SuspenseList ComponentReveal Suspense Components in Order with SuspenseList's revealOrder Prop in ReactAvoid Too Many Spinners with React SuspenseList¡¯s tail PropPass React Components a useTransition-Wrapped, State-Setting, CallbackAugment React Resource JSON with Custom PropertiesExtract Reusable React Components with an As Prop, Render Props, and React.FragmentConnect a New Endpoints in a React Suspense AppProvide Suspensified Data to React Components with Context and useContext",en,https://egghead.io/courses/build-an-app-with-react-suspense,Build an App with React Suspense,Michael Chan,6,23,-1,4.5,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/399/thumb/React_Suspense_Final.png,83,on
,"Develop and Publish a Node.js CLI from ScratchCreate a Single-Command Node.js CLI with Oclif, TypeScript and Yarn WorkspacesParse Flags and Args in Node.js CLIs with Oclif and TypeScriptConvert a Single Command CLI into a Multi Command CLI with Oclif and TypeScriptCreate a Hybrid Single-Multi Command Node.js CLI with Oclif and TypeScriptDebug Node.js CLIs with the VS Code Debugger and the `Debug` moduleTest Node.js CLIs with Jest and OclifDesign Beautiful, Intuitive and Secure Node.js CLI User Input Experiences with EnquirerCreate Highly Configurable Node.js CLIs with Cosmiconfig and OclifScaffold out Files and Projects from Templates in a Node.js CLISpawn and Manage Child Processes and Node.js Streams with execaPrompt Users to Update Your Node.js CLIs with Update-NotifierStore State on Filesystem in Node.js CLIs with ConfCreate Node.js CLI's that Intelligently Adapt to Usage with FrecencyPolish Node.js CLI Output with Chalk and Ora",en,https://egghead.io/courses/build-custom-cli-tooling-with-oclif-and-typescript,Build Custom Command Line Interface (CLI) Tooling with oclif and TypeScript,Shawn Wang,6,15,-1,4.7,8,TypeScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/404/thumb/CustomCLIs.png,90,on
,Set up Yarn Workspaces for Gatsby Theme DevelopmentAdd Static Data to a Gatsby ThemeCreate a Data Directory in Gatsby using the onPreBootstrap lifecycleSet up to Create Data Driven Pages in GatsbyCreate Data Driven Pages in Gatsby with GraphQL and createPagesDisplay Sorted Data with useStaticQuery in GatsbyDisplay and Query Data by id with Gatsby context and useStaticQueryStyle and Format Dates in ReactConfigure a Gatsby Theme to Take OptionsMake Gatsby Themes extendable with gatsby-theme-uiUse and Override a Theme in Gatsby with Component ShadowingPublish a Gatsby Theme to npmConsume a Theme in a Gatsby ApplicationUse Component Shadowing to Override Gatsby Theme Components ,en,https://egghead.io/courses/gatsby-theme-authoring,Gatsby Theme Authoring,Jason Lengstorf,6,14,-1,4.7,8,Gatsby,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/311/thumb/EGH_GatsbyThemes_Final.png,58,on
,Create a New SSH Public and Private Key SetCopy an SSH key to a remote server using ssh-copy-idSSH into a remote serverSimplify connections with SSH config filesUse scp to securely copy files remotely over SSHConfigure local and remote port forwarding with an SSH tunnelUse SSH escape sequences and codesCheck and verify SSH fingerprintsModify server configuration to lock down incoming SSH connectionsMonitoring and auditing SSH connection attempts,en,https://egghead.io/courses/ssh-for-remote-server-authentication,SSH for Remote Server Authentication,Mark Shust,6,10,-1,4.6,8,Bash,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/240/thumb/EGH_SHHAuth_Final.png,17,on
,Set up Vue-Router and add the Root Application RouteCreate Routes in Vue and Understand the Path HierarchyAccess Route Parameters in a Vue ComponentCreate Subroutes Displaying One or More Vue Components with the children KeyCatch All Undefined Paths with a Wildcard Route in VueAdd Metadata to Vue RoutesBlock Unauthenticated Access to Pages with Vue Router Navigation GuardsProgrammatically Navigate to Routes with Vue Component MethodsUse Vue Router-Link to Navigate within ComponentsRefactor Your Router and Route Definitions into Separate Files,en,https://egghead.io/courses/a-journey-with-vue-router,A Journey with Vue-Router,Laurie Barth,6,10,-1,4.3,8,Vue.js,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/354/thumb/VueRouter.png,22,on
,Start a Virtual Reality project with React 360Write text using the React 360 Text componentUse flexbox to create layouts in React 360Assign multiple styles to a component in React 360Display images using the Image component in React 360Create a Cylinder Surface and attach a component to it in React 360Create a Flat Surface and attach a component to it in React 360Add 3D objects to a React 360 applicationCapture user interaction in React 360 with VrButton component Change 360 panorama background in React 360 appUse Prefetch component to fetch images before they are needed in React 360Add animations to React 360 componentsCreate Native Modules to extend React 360 app functionalityBuild a React 360 app for production,en,https://egghead.io/courses/vr-applications-using-react-360,VR Applications using React 360,Tomasz ¨©akomy,6,14,-1,4.5,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/272/thumb/React360-final.png,29,on
,Create a React Native App and Run it on the iOS Simulator and Android EmulatorReload the Simulator when Changes Occur in React Native AppsDisplay and Format Text in a React Native ApplicationLayout React Native Components with FlexboxStyle Components in a React Native App with StyleSheetAccept User Input with React Native TextInputWrite to the Console Log in a React Native AppUse the Debugger in a React Native AppStyle React Native Components Differently on iOS and AndroidClean Up the Folder Structure and Imports in a React Native App with Absolute PathsScroll Elements on a React Native Screen with ScrollViewDisplay a List of Items in React Native with FlatListMake a Touchable Button in React NativeFetch Data from an HTTP Server in a React Native Application using fetch or axiosDisplay Local and Remote Images in React NativeAdd Icons to a React Native App with React Native Vector IconsShow a New Screen with React Navigation and StackNavigatorCustomize the StackNavigator Header with React Navigation in a React Native AppPass Data Between Screens when Navigating with StackNavigatorAdd Bottom Tabs to a React Native App with React NavigationAdd a Modal Screen that Pops Up from the Bottom with React NavigationEnsure Text Fields Don't Get Covered by the On Screen KeyboardShow a Spinner while Submitting a Form in React Native with ActivityIndicatorSave and Retrieve Data on the Device in a React Native App with AsyncStorageChange the Splash Screen for iOS Apps built with React NativeChange the Splash Screen for Android Apps built with React NativeChange the App Icon for React Native Apps on iOSChange the App Icon for React Native Apps on AndroidRun a React Native App on an iOS DeviceRun a React Native App on an Android DeviceBuild an iOS React Native App for Uploading to the iOS App Store or TestFlightBuild an Android React Native App for the Google Play Store or for Ad Hoc Distribution,en,https://egghead.io/courses/build-a-react-native-application-for-ios-and-android-from-start-to-finish,Build a React Native Application for iOS and Android from Start to Finish,Chris Achard,6,32,-1,4.6,8,React Native,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/242/thumb/EGH_ReactTakeoutbox_.png,78,on
,Add Redux to a React applicationAdd redux-observable to an existing Redux projectDebug redux-observable with redux dev-toolsImmediately fetch data from an API on page load Fetch data on demand from an APICreate an Ajax request from User Input Debounce user input to avoid repeated Ajax requests Filter actions to exclude empty valuesHandle network errors gracefullyUse an action to cancel an Ajax RequestCombine keyboard events with regular actionsAccess values from the store within an epicSave user input to the store and access it from an EpicStore and retrieve values from LocalStorageCreate multiple Ajax requests and group the the results.Inject dependencies into EpicsTest Epics with Marble DiagramsSimulate network errors within testsTest the interaction between streams,en,https://egghead.io/courses/asynchronous-state-management-with-redux-observable-v1,Asynchronous State Management with redux-observable v1,Shane Osbourne,6,19,-1,4.8,8,redux-observable,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/248/thumb/EGH_AsyncRedux_Final.png,92,on
,"Course Overview: Modern JavaScript Tooling with ReactInitialize an npm Project and git RepositoryAdd a Project and Push Changes to GitHub with gitInstall webpack and create a default bundleExplicitly Define an Entry Point with a webpack Configuration FileControl the Output of webpack with the mode SettingTransform Modern JavaScript Features with BabelConfigure webpack to Load JavaScript Files through Babel with babel-loaderConfigure babel for React with preset-reactInject a JavaScript bundle into HTML with the HtmlWebpackPluginUpdate your Bundle with each File Save with webpack's watch ModeCreate Separate webpack Configs for Development and Production with webpack-mergeServe a webpack Bundle while Developing with webpack-dev-serverGenerate Source Maps through webpack for a Better Debugging Experience with source-mapSupport Proposed JavaScript Features with Babel PluginsAutomatically Import CSS in JavaScript with webpack using style-loader and css-loaderHot Reload a React App in Development with react-hot-loaderAvoid Duplicate Commands by Calling one NPM Script from AnotherAnalyze a Production JavaScript Bundle with webpack-bundle-analyzerExternalize Dependencies to be Loaded via CDN with webpackTarget specific browsers with babel-preset-env and the babel pollyfillAsynchronously Load webpack Bundles through Code-splitting and React SuspenseRun a Simple Test with Jest in a React AppSet Up Tests that Render a React Component with Jest and BabelSet up Testing Globals in an Application with JestConfigure Prettier to Automatically Format CodeAvoid Common JavaScript Errors with ESLint Check for Accessibility Issues in JSX with the jsx-a11y ESLint PluginRun Linting, Tests and Prettier in git Hooks with HuskyAvoid Deprecated React APIs with React.StrictModeCreate an Error Boundary for a React AppDefine Prop Types for a React Class ComponentCheck for Accessibility Issues in the Browser with react-axeCreate a New Project by Cloning the Boilerplate Project",en,https://egghead.io/courses/modern-javascript-tooling-with-react,Modern JavaScript Tooling with React,Andy Van Slaars,6,34,-1,4.8,8,"React,webpack",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/257/thumb/EGH_JSTooling-React_Final.png,146,on
,Change a Stateful React Class Component to a Function Component with the State HookUse the React Effect Hook in Function ComponentsWrite a Custom State Hook in ReactWrite a Custom React Effect HookExtract a Custom Hook into its own Module with create-react-hookTest your Custom Hook Module with react-hooks-testing-libraryPrepare a Custom React Hook to be Published as an npm PackagePublish a Custom React Hook as an npm Package,en,https://egghead.io/courses/shareable-custom-hooks-in-react,Shareable Custom Hooks in React,Joe Previte,6,8,-1,4.4,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/313/thumb/EGH_CustomReactHooks_Final.png,30,on
,Course Introduction to Just Enough Functional Programming In JavaScriptModify Functions with Higher Order Functions in JavaScriptAvoiding Mutations in JavaScript with Immutable Data StructuresRefactor a Function to Use Currying in JavaScriptIdentify Side Effects by Comparing Pure and Impure JavaScript FunctionsCreate Reusable Functions with Partial Application in JavaScript Eliminate Anonymous JavaScript Functions with Pointfree ProgrammingBuild Up Complex Functionality by Composing Simple Functions in JavaScriptImprove JavaScript Function Usability with Proper Argument Order in Functional ProgrammingUsing the Associative Property in JavaScript Functional CompositionsDebug Functional Compositions with a Logging Side Effect in JavaScript,en,https://egghead.io/courses/just-enough-functional-programming-in-javascript,Just Enough Functional Programming in JavaScript,Kyle Shevlin,6,11,-1,4.5,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/241/thumb/Functional_Programming.png,30,on
,Only commit some of my currently modified files into the repositoryMake my git log look pretty and readableMove some commits to a separate branch that I have accidentally committed to masterUpdate my feature branch with the latest changes from masterPush a rebased local branch by using `--force-with-lease`Polish my git feature branch before merging or submitting for reviewAutomate the cleanup of my feature branch with Git AutosquashSquash all of my commits into a single one and merge into masterChange the commit message of my last commitAdd a file I¡¯ve forgotten to add to my last commitUndo my last commit and split it into two separate onesWipe a commit from my local branchUndo a commit that has already been pushed to the remote repositoryTemporarily store some work in progress because I have to jump to another branch,en,https://egghead.io/courses/productive-git-for-developers,Productive Git for Developers,Juri Strumpflohner,6,14,-1,4.5,8,git,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/247/thumb/EGH_ProductiveGitFinal.png,30,on
,Setup GreenSock as a Module with ParcelAnimate and Center an Element to a Click Event with GreenSockRotate an Element Based on Previous Values with GreenSockCreate Animation Steps with GreenSock's TimelinePause or Resume an Animation by Checking isActive with GreenSockManually Control the Animation with progress in GreenSockAnimate From a Variable Point with from and fromTo in GreenSockControl an Array of Elements with the Same Animation in GreenSockStop Animations with killTweensOf and killAll in GreenSockAnimate Between CSS Classes with GreenSockSpin Elements in 3d with GreenSockControl the Shared 3d Perspective of Multiple Elements with GreenSockLoop a Tween Forever Using Yoyo and Repeat with GreenSock,en,https://egghead.io/courses/create-amazing-animations-with-greensock,Create Amazing Animations with GreenSock,John Lindquist,6,13,-1,4.4,8,GreenSock,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/253/thumb/EGH_GreensockAnimation_Final.png,24,on
,Introduction to JavaScript Promises in DepthCreate a Promise Chain in JavaScript with Promise.prototype.then()Catch Errors in a JavaScript Promise Chain with Promise.prototype.catch()Execute Cleanup Logic in a JavaScript Promise Chain with Promise.prototype.finally()Create a Rejected Promise in JavaScript with Promise.reject()Create a Resolved Promise in JavaScript with Promise.resolve()Create a New Promise in JavaScript with the Promise ConstructorConvert a Callback-Based JavaScript Function to a Promise-Based OneWait for the Fastest JavaScript Promise to Settle with Promise.race()Wait for Multiple JavaScript Promises to Be Fulfilled with Promise.all()Wait for Multiple JavaScript Promises to Settle with Promise.allSettled()Wait for the Fastest JavaScript Promise to Be Fulfilled with Promise.any()Await a JavaScript Promise in an async Function with the await Operator,en,https://egghead.io/courses/javascript-promises-in-depth,JavaScript Promises in Depth,Marius Schulz,6,13,-1,4.7,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/185/thumb/JSPromises_Final.png,67,on
,Course Introduction: Test Production Ready Apps with CypressInstall Cypress in a Production ApplicationSetup Your Cypress Dev EnvironmentWrite Your First Cypress Integration TestUse the Most Robust Selector for Cypress TestsDebug and Log with CypressMock Your Backend with CypressAssert on Your Redux Store with CypressCreate Custom Cypress CommandsWrap External Libraries with CypressReuse Data with Cypress FixturesMock Network Retries with CypressFind Unstubbed Cypress Requests with Force 404Extend Cypress with PluginsSeed Your Database in CypressProductionize Your Database Seeder in CypressAssert on Database Snapshots in CypressAssert on XHR Requests in CypressFull End-To-End Testing in Cypress,en,https://egghead.io/courses/test-production-ready-apps-with-cypress,Test Production Ready Apps with Cypress,Brett Cassette,6,19,-1,4.4,8,Cypress,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/306/thumb/EGH_Cypressapps.png,76,on
,Introduction to React Context for State Management Avoid passing props deeply by using React ContextPass Data With a Callback Through React ContextHide the Implementation Details of a Context ProviderUse Multiple React Context Providers in the Same AppUse a React Context Consumer Outside of the Matching ProviderUse React Context to Display NotificationsUse contextType to Consume Context in a React Class Without a ConsumerUse the useContext Hook to Consume Context in Function ComponentsTest a Component That Uses a React Context ConsumerTest a Component That Uses a React Context ProviderPerformantly Render a Large List of Items with React Context,en,https://egghead.io/courses/react-context-for-state-management,React Context for State Management,Dave Ceddia,6,12,-1,4.6,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/262/thumb/EGH_ReactContext_Final.png,35,on
,Introduction to Execute npm Package Binaries with the npx Package RunnerUse npx to run locally installed node modulesUse npx to Temporarily Install and Invoke a Package from npmTest Different Node Module Versions with npxUse npx to run commands with different Node.js versionsExecute npx commands with $npm_ Environment VariablesExecute Code from a Remote GitHub Branch with npxUse npx to execute code from a GitHub gist,en,https://egghead.io/courses/execute-npm-package-binaries-with-the-npx-package-runner,Execute npm Package Binaries with the npx Package Runner,Elijah Manor,6,8,-1,4.6,8,npm,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/221/thumb/EGH_NPM-NPX_Final.png,17,on
,Set CSS Properties and Values (syntax)Use Selectors to Style HTML ElementsUtilize Selector Specificity to Control Applied Styles  Style Elements Using the Cascade Apply CSS Styles with InheritanceDebug CSS with the Chrome DevtoolsUnderstand CSS Layout with the Box ModelControl HTML Elements with Different CSS UnitsManipulate Colors with CSSAdd Backgrounds to HTML ElementsHide and Show HTML Elements with CSSModify Font Style in CSSPositioning HTML Elements using CSSCustomize CSS Selectors with Pseudo ClassesUse CSS Media Queries to Dynamically Apply StylesStyle a Logo and Navigation on a Website with CSS,en,https://egghead.io/courses/css-fundamentals,CSS Fundamentals,Tyler Clark,6,16,-1,4.4,8,CSS,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/227/thumb/EGH_CSSFundamentals_Final.png,33,on
,Anatomy of an Algolia Search API ResponseLeverage the Algolia JS API Client to Display Raw Hits from the API ResponseSet up the Instantsearch JS LibraryHow to Add Instantsearch JS widgets and their common attributes Search an Algolia Index with Instantsearch JS searchbox and hits widgetsDisplay Rich results with templates in the Hits widget for Instantsearch JSHighlight Keywords in Query Results using the Instantsearch JS Hits WidgetFilter Datasets with Facets using Instantsearch JS to add a Refinement ListBrowse results based on a hierarchy of Facets (HierarchicalMenu) in Instantsearch JSRefine a dataset using a numeric range in Instantsearch JS with the Range Input widgetReset all active refinements with the clearRefinements Instantsearch JS widgetPaginate Large Sets of Algolia Data with Instantsearch JS Pagination widgetInform users about the current result set with Instantsearch JS Stats widget,en,https://egghead.io/courses/getting-started-with-algolia-instantsearch-js,Getting Started with Algolia InstantSearch.js,Raphael Terrier,6,13,-1,4.6,8,Algolia,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/238/thumb/EGH_Agolia-InstantSearch_Final.png,26,on
,"Create a Mobile, Tablet and Desktop Frame in FigmaBuild Reusable Designs with Figma ComponentsAdd a Reusable Figma Component to Multiple FramesCreate a Simple Icon with Figma Ellipse and Pen ToolDuplicate Grouped Vectors to Create a Patterned Logo in FigmaEstablish a Typography System in Figma with Text StylesCreate Figma Color Styles to Reuse Across Frames Reuse a Drop Shadow in Figma with Effect StylesPrototype a Screen Transition in FigmaExport and Share Figma Frames",en,https://egghead.io/courses/the-beginner-s-guide-to-figma,The Beginner's Guide to Figma,Joe Previte,6,10,-1,4.4,8,Figma,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/265/thumb/EGH_BeginnerFigma_Final.png,24,on
,"Course Overview: Advanced Bash Automation for Web DevelopersCreate Aliases in .bash_profile for Common Bash CommandsAdd Executable Files to $PATH with BashCreate and Copy Multiple Files with Brace Expansions in BashRerun Bash Commands with History ExpansionsSet Default Arguments with Bash Shell Parameter ExpansionsUse Bash Keyboard ShortcutsRead and Use JSON in Bash with jqUse jq and grep to Find Unused Dependencies in a ProjectUnderstand how to Redirect stdin, stdout, and stderr in BashUse exec to Redirect stdio in a git Hook ScriptUse case for Complicated Conditional Statements in BashCreate a Bash Script that Accepts Named Options with getoptsCreate a Bash Script to Open a Pull Request on Github using getoptsSend and Receive Data from a Node.js Script in Bash using the Process ObjectTransform Piped Data from Bash using a Node.js Transform StreamSchedule Timed Jobs on macOS with `launchd`",en,https://egghead.io/courses/advanced-bash-automation-for-web-developers,Advanced Bash Automation for Web Developers,Cameron Nokes,6,17,-1,4.4,8,"Bash,mac",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/239/thumb/EGH_BashAutomation_Final.png,52,on
,"Course Overview: Practical Advanced TypeScript FeaturesImprove Readability with TypeScript Numeric Separators when working with Large NumbersMake TypeScript Class Usage Safer with Strict Property InitializationUse the JavaScript ¡°in¡± operator for automatic type inference in TypeScriptAutomatically infer TypeScript types in switch statementsCreate Explicit and Readable Type Declarations with TypeScript mapped Type ModifiersUse Types vs. InterfacesBuild self-referencing type aliases in TypeScriptSimplify iteration of custom data structures in TypeScript with iteratorsUse the TypeScript ""unknown"" type to avoid runtime errorsDynamically Allocate Function Types with Conditional Types in TypeScriptUse TypeScript conditional types to create a reusable Flatten typeInfer the Return Type of a Generic Function Type ParameterDeeply mark all the properties of a type as read-only in TypeScriptDynamically initialize class properties using TypeScript decorators",en,https://egghead.io/courses/practical-advanced-typescript,Practical Advanced TypeScript,Rares Matei,6,15,-1,4.6,8,TypeScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/216/thumb/EGH_TSGuards_Final.png,62,on
,Course Introduction: Fully Connected Neural Networks with KerasCreate a Fully Connected TensorFlow Neural Network with KerasTrain a Sequential Keras Model with Sample DataSeparate Training and Validation Data Automatically in Keras with validation_splitManually Set Validation Data While Training a Keras ModelEvaluate a Keras Model with Test DataTesting Different Neural Network TopologiesUnderstand the Structure of a Keras Model by Viewing the Model SummaryMake Predictions on New Data with a Trained Keras ModelsSave a Trained Keras Model Weights and Topology to a FileLoad and Use a Saved Keras ModelCreate a Neural Network for Two Category Classification with KerasImport Data From a CSV to Use with a Keras Model Using NumPy¡¯s genfromtxt MethodMake Binary Class Predictions with Keras Using predict and predict_classesCreate a Dense Neural Network for Multi Category Classification with KerasMake Predictions on New Data with a Multi Category Classification NetworkChange the Learning Rate of the Adam Optimizer on a Keras NetworkChange the Optimizer Learning Rate During Keras Model TrainingContinue to Train an Already Trained Keras Model with New Data,en,https://egghead.io/courses/fully-connected-neural-networks-with-keras,Fully Connected Neural Networks with Keras,Chris Achard,6,19,-1,4.6,8,python,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/226/thumb/EGH_KerasNeural_Final.png,38,on
,Course Overview: JavaScript ES2019 in PracticeHandle Exceptions with ES2019 Optional Catch Bindings in JavaScriptStable Sort an Array with ES2019 JavaScriptFlatten an Array with ES2019 flat in JavaScriptTrim the End of a String in JavaScript with ES2019 trimEndMap Elements of an Array with ES2019 flatMap Use JavaScript ES2019 flatMap to Map and Filter an ArrayRepresent Collision-free String Constants as Symbols in JavaScriptCreate an Object from a Map or key-value Pairs in JavaScript with ES2019 fromEntries,en,https://egghead.io/courses/javascript-es2019-in-practice,JavaScript ES2019 in Practice,Mike Sherov,6,9,-1,4.2,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/310/thumb/EGH_ES2019_Final.png,28,on
,"Refactor to Point Free Functions with Ramda using compose and convergeConvert a QueryString to an Object using Function Composition in RamdaSelect a Subset of Properties from a Collection of Objects in RamdaHandle Branching  Logic with Ramda's Conditional FunctionsDeclaratively Map Predicates to Object Properties Using Ramda whereChange Object Properties with Ramda LensesAdd and Remove Items in Arrays using Filter, Reject and Partition in RamdaBuild a Functional Pipeline with Ramda.jsPick and Omit Properties from Objects Using RamdaCurry and Uncurry Functions with RamdaDeclaratively Map Data Transformations to Object Properties Using Ramda evolveHandle Errors in Ramda Pipelines with tryCatchCreate an Array From a Seed Value with Ramda's unfoldConvert a Promise.all Result to an Object with Ramda's zip and zipObjFilter an Array Based on Multiple Predicates with Ramda's allPass FunctionCreate a Query String from an Object using Ramda's toPairs functionConvert Object Methods into Composable Functions with RamdaSort an Array of Objects by Multiple Fields with Ramda's sortWithRefactor a Promise Chain to Function Composition using RamdaRefactor to a Point Free Function with Ramda's useWith FunctionGet a List of Unique Values From Nested Arrays with RamdaDebug Function Compositions with Ramda's Tap FunctionCreate a Reusable Mapping Function with Ramda's MapGet Deeply Nested Properties Safely with Ramda's path and pathOr FunctionsDiscard the High and Low Values From an Array of Numbers with Ramda",en,https://egghead.io/courses/functional-programming-in-javascript-with-ramda-js,Functional Programming in JavaScript with Ramda.js,Andy Van Slaars,6,25,-1,4.6,8,Ramda,https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/943/thumb/ramda.png,98,on
,"Course Overview: Create Smooth, Performant Transitions with React Transition Group v2Transition a React Component using CSS with RTG¡¯s `CSSTransition` component Show React Transition Group Elements with an Initial Transition with the `appear` PropDisable RTG enter and/or exit Transitions using the `enter`, and `exit` PropsFine-tune Transitions with React Transition Group¡¯s Lifecycle PropsTransition Items within a List with React Transition GroupRender a Different HTML Element as the `<TransitionGroup>` Container ElementTransition between Pages with React Transition Group and React RouterWrite Transitions with React Transition Group using JSSUse React Transition Group alongside the Styled Components library",en,https://egghead.io/courses/create-smooth-performant-transitions-with-react-transition-group-v2,"Create Smooth, Performant Transitions with React Transition Group v2",Rory Smith,6,10,-1,4.5,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/213/thumb/EGH_React_Transitions_Final.png,33,on
,"Course Introduction: Progressive Web Apps in React with create-react-appCreate a Progressive Web App with React and Register a Service WorkerView the Service Worker and the Cache, and Debug a PWA with Chrome¡¯s Dev ToolsUse a Custom Service Worker in a create-react-app PWA without EjectingPre-cache Static Resources with Workbox and View a React PWA OfflineListen for `install` and `activate` PWA Events in a Service WorkerCache Third Party Resources from a CDN in a React PWACache JSON Data in a React PWA with Workbox, and Display it while OfflineAdd an Offline Status Indicator to a PWA with ReactShow an Error when a POST or DELETE Fails in an Offline PWAAdd a Custom App Icon to a PWA built with create-react-appChange the Name and Short Name of a PWA built with create-react-appAdd a PWA to the Home Screen of an iOS or Android Device, and the Chrome App Home ScreenAdd Navigation Elements in React to a PWA in Standalone ModeAccess the Camera in a PWA built with ReactAdd Push Notifications to a PWA with React in Chrome and on AndroidDisable Text Selection and Touch Callouts in a PWA on iOSChange the Status Bar Color on iOS and Android in a PWACustomize the Splash Screen of a PWA built with create-react-appDo a PWA Audit with Lighthouse using Chrome Dev Tools",en,https://egghead.io/courses/progressive-web-apps-in-react-with-create-react-app,Progressive Web Apps in React with create-react-app,Chris Achard,6,20,-1,4.5,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/266/thumb/EGH_PWAReact_Final.png,45,on
,Model Content in the Contentful Web AppModel Content programmatically using the contentful-migration tool Add Contentful as a data source for GatsbyList data entries from Contentful in GatsbyProgrammatically create Gatsby pages from Contentful dataRender Contentful rich text in GatsbyUse Graphql backreference to avoid circular dependencies between Content modelDeploy a Gatsby website on NetlifyTrigger Netlify Builds when content changes in Contentful,en,https://egghead.io/courses/build-content-rich-progressive-web-apps-with-gatsby-and-contentful,Build Content Rich Progressive Web Apps with Gatsby and Contentful,Khaled Garbaya,6,9,-1,4.4,8,Gatsby,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/308/thumb/EGH_GatsbyContentful_Final.png,33,on
,"Setup and Introduction to SQL FundamentalsCreate a Table with SQL CreateAdd Data to a Table with SQL InsertQuery Data with the Select Command in SQLUpdate Data in a Table with SQL UpdateRemoving Data with SQL Delete, Truncate, and DropKeep Data Integrity with Constraints Organize Table Data with IndexesSelect Grouped and Aggregated Data with SQLConditionally Select out Filtered Data with SQL WhereCombining Tables Together with SQL Join StatementsSubquery Dynamic Datasets in SQL",en,https://egghead.io/courses/sql-fundamentals,SQL Fundamentals,Tyler Clark,6,12,-1,4.2,8,PostgreSQL,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/273/thumb/EGH_SQLFundamentals_Final.png,33,on
,Introduction to Refactoring a React Application to React HooksRefactor a Class Component with React hooks to a FunctionHandle Deep Object Comparison in React's useEffect hook with the useRef HookSafely setState on a Mounted React Component through the useEffect HookExtract Generic React Hook Code into Custom React HooksTrack Values Over the Course of Renders with React useRef in a Custom usePrevious HookRefactor a React Class Component with useContext and useState HooksRefactor a render Prop Component to a Custom React HookHandle componentDidMount and componentWillUnmount in React Component Refactor to HooksDynamically Import React Components with React.lazy and SuspensePreload React Components with the useEffect Hook,en,https://egghead.io/courses/simplify-react-apps-with-react-hooks,Simplify React Apps with React Hooks,Kent C. Dodds,6,11,-1,4.6,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/263/thumb/EGH_SimplifyHooks_Final.png,38,on
,Set up a Shopify AccountSet up a WordPress accountSetup and Run a Gatsby SiteConvert Gatsby Site to Yarn Workspace ProjectOverview of Gatsby Site Example ProjectCreate a Marketing Gatsby ThemeBuild an Advanced Gatsby Theme ShopifyCreating a Blog ThemeUse Schema Customization to Support MDX and WordPress Powering BlogPost with WordPress and MDX,en,https://egghead.io/courses/composable-gatsby-themes,Composable Gatsby Themes,Chris Biscardi,6,10,-1,4.1,8,Gatsby,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/355/thumb/GatsbyThemes.png,52,on
,Course Introduction: Data Structures and Algorithms in JavaScriptQueue Data Structure in JavaScriptPriority Queue JavaScript Data Structure Stack Data Structure in JavaScriptLinked List Data Structure in JavaScriptJavaScript Graph Data StructureBreadth First JavaScript Search Algorithm for GraphsWrite a Depth First Search Algorithm for Graphs in JavaScriptTree Data Structure in JavaScriptBuild a Binary Tree  in JavaScript and Several Traversal AlgorithmsSort an Array with a JavaScript do while Loop using Bubble SortSort an Array with a Nested for Loop using Insertion Sort in JavaScriptDivide and Recurse Over an Array with Merge Sort in JavaScriptRecursively Sort an Array in JavaScript with Quick Sort,en,https://egghead.io/courses/data-structures-and-algorithms-in-javascript,Data Structures and Algorithms in JavaScript,Kyle Shevlin,6,14,-1,4.5,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/261/thumb/EGH_JSAlgorithms_Final.png,49,on
,Setup a TypeScript ProjectConfigure TypeScript for React and JSXUnderstand the TypeScript Compiler AKA tscExplore TypeScript by Writing FunctionsUnlock TypeScript's Features in Vanilla JS with @ts-check and JSDocWork with DOM Elements in TypeScript using Type AssertionsCreate Your First Generic in TypeScriptUse Type Definitions for Popular Projects on npm with @types,en,https://egghead.io/courses/up-and-running-with-typescript,Up and Running with TypeScript,John Lindquist,6,8,-1,4.3,8,TypeScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/052/thumb/EGH_Typescript_Plumbing_image.png,22,on
,Introduction to Reusable State and Effects with React HooksEnvironment Setup for React HooksAdd State with the useState Hook to a React Function ComponentAdd Linting to Help Enforce Rules when Using React HooksAdd a Lifecycle Event with the useEffect Hook to a React Function ComponentUse the React useRef Hook to Reference a DOM Element or Simulate an Instance VariableWrite Custom Hooks to Share Logic Between React Function ComponentsLeverage an Existing Community Hook in Your React Function ComponentUse the useReducer Hook and Dispatch Actions to Update State Use the useContext Hook to Wire-up the React Context API Simulate PureComponent with a React Function ComponentLeverage the React useMemo Hook for Expensive OperationsConvert a Render Props Component using a Custom React Hook,en,https://egghead.io/courses/reusable-state-and-effects-with-react-hooks,Reusable State and Effects with React Hooks,Elijah Manor,6,13,-1,4.6,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/264/thumb/EGH_ReactHooks_Final_%281%29.png,57,on
,Getting started with Express and Socket.ioSet up a simple Socket.io client to connect to the server.Connect a Vue.js Component to a Socket.io serverDisplay a broadcast message using a Vuetify snackbar component which is sent via Socket.ioMapping a Socket.io id to a known User using an example Vue component.Build a Vue Component to send a message to specific users using Socket.ioHandle Client and Server disconnects using Socket.ioSending an Image from Express to a Vue Component using Socket.ioBuilding an acknowledgement function to a Vue Socket.io emit method,en,https://egghead.io/courses/vue-and-socket-io-for-real-time-communication,Vue and Socket.io for Real-Time Communication,Mark Barton,6,9,-1,4.4,8,"Express,Vue.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/307/thumb/EGH_VueSocket.png,49,on
,Configure Vue.js to Enable RxJS StreamsCreate RxJS Streams in the Vue.js Subscriptions FunctionAccess Events from Vue.js Templates as RxJS Streams with domStreamsStream an API using RxJS into a Vue.js TemplateMap Click Event Streams to Load Data with Vue.js and RxJSSplit a Request into Data Stream and an Image Stream with RxJS and Vue.jsHandle Image Loading Errors in Vue.js with RxJS and domStreamsSwitch to a Function which Creates Observables with Vue.js and RxjsCatch Errors when Data Fails to Load with Vue.js and RxJSShare RxJS Streams to Avoid Multiple Requests in Vue.jsDisable Buttons While Data is Loading with RxJS and Vue.jsPause Until Another Stream Completes with exhaustMap in RxJS and Vue.jsPass Template Data Through domStreams in Vue.js and RxJSWatch Vue.js v-models as Observable with $watchAsObservable and RxJSSync Vue.js Components with Streaming Content using $watchAsObservable and RxJSMap Vue.js Components to Remote Data Streams with RxJSUse Promises with RxJS in Vue.jsCache Remote Data Requests with RxJS and Vue.jsOptimize Bundle Size by Piping Operators with RxJS and Vue.js,en,https://egghead.io/courses/build-async-vue-js-apps-with-rxjs,Build Async Vue.js Apps with RxJS,John Lindquist,6,19,-1,4.6,8,"Vue.js,RxJS",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/202/thumb/Build_Async.png,40,on
,Course Overview: Scalable Offline-Ready GraphQL Applications with AWS AppSync & ReactCreate your first AWS AppSync GraphQL APIExecute Mutations within the AWS AppSync ConsoleExecute Queries within the AWS AppSync ConsoleConnect to AWS AppSync from a React ApplicationExecute Queries to an AWS AppSync GraphQL API from a React ApplicationExecute Mutations to an AWS AppSync GraphQL API from a React ApplicationSubscribe to New Data in a React Application with AWS AppSync GraphQL SubscriptionsBuilding AWS AppSync APIs using the AWS Amplify CLI,en,https://egghead.io/courses/scalable-offline-ready-graphql-applications-with-aws-appsync-react,Scalable Offline-Ready GraphQL Applications with AWS AppSync & React,nader dabit,6,9,-1,4.4,8,"AWS,GraphQL",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/211/thumb/EGH_GraphQL-AWs_Final.png,31,on
,Course Overview: End to End Testing with CypressAdd Cypress to an Existing Application with npmVisit a page with CypressFind and Test Focused Input with Chrome¡¯s DevTools in CypressTest React¡¯s Controlled Input with Cypress Selector PlaygroundReduce Code Duplication in Cypress Tests with beforeEachStub Network Requests in a Cypress TestLoad Data from Test Fixtures in CypressWait for XHR Responses in a Cypress TestCreate a Single Custom Cypress Command from Multiple CommandsStub a Post Request for Successful Form Submission with CypressTest XHR Failure Conditions with CypressInteract with Hidden Elements in a Cypress TestCreate Aliases for DOM Elements in Cypress TestsTest Variations of a Feature in Cypress with a data-driven TestAccess step-by-step Logs with Chrome devTools and Cypress UICreate True end-to-end Tests with CypressRun Cypress Tests without the UI,en,https://egghead.io/courses/end-to-end-testing-with-cypress,End to End testing with Cypress,Andy Van Slaars,6,18,-1,4.7,8,Cypress,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/192/thumb/Cypress_Testing.png,67,on
,Understand Basic CSS SelectorsIdentify Interactive HTML Elements with CSS Link Pseudo ClassesDefine Form Element States with CSS Form Pseudo ClassesTarget Custom HTML Element Patterns with DOM Hierarchy Pseudo Classes in CSSTarget HTML Elements not Explicitly set in the DOM with CSS Pseudo ElementsChain Simple CSS Selectors for Fine-grain DOM Element TargetingAdvanced CSS Selector Chaining for Improved Interaction without JavascriptUnderstand CSS Selector Specificity,en,https://egghead.io/courses/css-selectors-in-depth,CSS Selectors in Depth,Garth Braithwaite,6,8,-1,4.4,8,CSS,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/235/thumb/EGH_CSSSelectors_Final.png,34,on
,Course Intro to Angular ElementsTransform an Angular Component into a native Custom ElementCompile an Angular Component as standalone Custom ElementsUse ngx-build-plus to compile Angular ElementsCommunicate with Angular Elements using Inputs and EventsUse an Angular component inside a React App with Angular ElementsPass data from a React component to an Angular component with Angular ElementsCreate multiple root components in Angular with Angular ElementsUse Angular components in AngularJS applications with Angular Elements,en,https://egghead.io/courses/getting-started-with-angular-elements,Getting Started with Angular Elements,Juri Strumpflohner,6,9,-1,4.6,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/219/thumb/EGH_AngularElements_Final.png,40,on
,Setup your first Dart projectSetup your first Dart project on WindowsSet up your first Dart project on LinuxUnderstand Built-in types in DartUnderstand Variables and Constants in DartDefine Optional Named and Positional Parameters for Functions and Methods in DartControl Flow Statements in DartUnderstand Classes and Inheritance in DartDefine Interfaces and Share Class Members through Mixins in DartCapture and Return Asynchronous Values with Futures in DartCapture and Handle Data Sequences with Streams in DartManage Package Dependencies with PubManipulate Strings in DartManipulate Lists/Arrays in DartAdd New Methods to inbuilt Classes and Interfaces with Extension Methods in Dart,en,https://egghead.io/courses/get-started-with-dart,Get Started with Dart,Jermaine Oppong,6,15,-1,4.1,8,Dart,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/268/thumb/EGH_Dart.png,37,on
,Introduction to Prototypal Inheritance in JavaScriptLink to Other Objects through the JavaScript Prototype ChainPrototype Delegation with JavaScript's new KeywordUnderstanding the .constructor property on JavaScript ObjectsUnderstand JavaScripts this keyword within PrototypesUse JavaScript's for-in Loop on Objects with PrototypesCompose Objects with Object.assign to Create a Direct CopyUnderstanding Prototype Delegation within JavaScript's Class KeywordAssign and Access Methods of a JavaScript Class with Static PropertiesDetermine an Object's Constructor with JavaScripts instanceof OperatorCreate Factory Functions for Object CompositionUse Polymorphism with Prototype Linked ObjectsReplicate JavaScript Constructor Inheritance with Simple Objects (OLOO),en,https://egghead.io/courses/understanding-javascript-s-prototypal-inheritance,Understanding JavaScript's Prototypal Inheritance,Tyler Clark,6,13,-1,4.3,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/205/thumb/EGH_JSProtoInheritance.png,27,on
,Create a Generic Subscriber in RxJSExtend Subscriber to Override `_next` in RxJSConnect a Source to a Subscriber with RxJS `pipe`Use `lift` to Connect a `source` to a `subscriber` in RxJSCreate a Reusable Operator from Scratch in RxJSCreate Operators from Existing Operators in RxJSImplement the `map` Operator from Scratch in RxJSChain RxJS Operators Together with a Custom `pipe` Function using Array.reduceImplement RxJS `mergeMap` through inner Observables to Subscribe and Pass Values ThroughImplement RxJS `switchMap` by Canceling Inner Subscriptions as Values are Passed ThroughImplement RxJS `concatMap` by Waiting for Inner Subscriptions to Complete`add` Inner Subscriptions to Outer Subscribers to `unsubscribe` in RxJS,en,https://egghead.io/courses/build-your-own-rxjs-pipeable-operators,Build Your Own RxJS Pipeable Operators,John Lindquist,6,12,-1,4.4,8,RxJS,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/230/thumb/EGH_RxJs_Pipeable.png,31,on
,Course Introduction: Beautiful and Accessible Drag and Drop with react-beautiful-dndSet up a React Environment with create-react-appCreate and Style a List of Data with ReactReorder a List with react-beautiful-dndPersist List Reordering with react-beautiful-dnd using the onDragEnd CallbackCustomise the Appearance of an App during a Drag using react-beautiful-dnd snapshot ValuesCustomise the Appearance of an App using react-beautiful-dnd onDragStart and onDragEndDesignate Control of Dragging for a react-beautiful-dnd Draggable with dragHandlePropsMove Items between Columns with react-beautiful-dnd using onDragEndConditionally Allow Movement using react-beautiful-dnd Draggable and Droppable PropsCreate Reorderable Horizontal Lists with react-beautiful-dnd direction propReorder Columns with react-beautiful-dndOptimize Performance in react-beautiful-dnd with shouldComponentUpdate and PureComponentCustomize Screen Reader Messages for Drag and Drop with react-beautiful-dnd,en,https://egghead.io/courses/beautiful-and-accessible-drag-and-drop-with-react-beautiful-dnd,Beautiful and Accessible Drag and Drop with react-beautiful-dnd,Alex Reardon,6,14,-1,4.7,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/209/thumb/React_Dnd_Final.png,63,on
,Course Introduction: GraphQL with React and Apollo ClientSetup and Connect an Apollo Client to a React Application with Apollo ProviderFetch Data using the Apollo Query ComponentProvide Dynamic Arguments in a Apollo Query Component with GraphQL VariablesUpdate Data using the Apollo Mutation componentManage Local State using Apollo by extending the GraphQL Schema on the ClientRefetch Data with the Apollo Query Component either Manually or on Timed Intervals,en,https://egghead.io/courses/graphql-data-in-react-with-apollo-client,GraphQL Data in React with Apollo Client,Nik Graf,6,7,-1,4.3,8,"React,Apollo,GraphQL",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/231/thumb/EGH_Apollo-GraphQL-React_Final.png,23,on
,"Course Overview: Manage React Form State with redux-formBootstrap a create-react-app project with React, Redux, and redux-formCreate a Simple Form Field in redux-formUse a Custom Input Component as a redux-form FieldSet an Initial Value of a Form Field using redux-formAccess the State of redux-form Fields using the `meta` propAdd Synchronous Validation to a redux-form using a Validation FunctionAdd Synchronous Validation to a redux-form using field-level ValidationAdd Styles that Reflect the Validity of redux-form FieldsAccess Other Values of the Current Form with redux-formUse Asynchronous Validation after Submitting a Form in redux-formUse Asynchronous Blur Validation while a Form is being Filled out using redux-formLimit or Control What gets Input into a redux-form Field using normalizingUse FieldArray to deal with multiple similar fields",en,https://egghead.io/courses/manage-react-form-state-with-redux-form,Manage React Form State with redux-form,Rory Smith,6,14,-1,4.6,8,"React,Redux",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/197/thumb/Manage_React_Form.png,46,on
,Course Overview: Automate Daily Development Tasks with BashNavigate the Filesystem in BashView Files and Folders in BashCreate and Delete Files and Folders in BashMove and Copy Files and Folders with BashFind Files and Folders with `find` in BashSearch for Text with `grep`Make HTTP Requests in Bash with `curl`Create and Run Bash Scripts with Command Line ArgumentsStore and Use Values with Bash VariablesUnderstand and Use Functions in BashUnderstand Exit Statuses in BashUse Conditional Statements in BashChain Commands with Pipes and Redirect Output in Bash,en,https://egghead.io/courses/automate-daily-development-tasks-with-bash,Automate Daily Development Tasks with Bash,Cameron Nokes,6,14,-1,4.4,8,Bash,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/199/thumb/EGH_BashDailyTasks_Final.png,46,on
,Course Overview: Advanced Angular Component PatternsExpose an Angular Component¡¯s State to the Parent ComponentWrite Compound Components with Angular¡¯s ContentChildCommunicate Between Components Using Angular Dependency InjectionRefactor Angular Component State Logic into DirectivesOverride Component UI with an Angular TemplateRefModify User Provided UI with Angular Content DirectivesAllow Users to Configure Angular Content DirectivesExpose Angular Component Logic Using State Reducers,en,https://egghead.io/courses/advanced-angular-component-patterns,Advanced Angular Component Patterns,Isaac Mann,6,9,-1,4.3,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/215/thumb/EGH_AdvAngularPatts_Final.png,31,on
,Install & Configure the AWS Amplify CLICreate & Configure an AWS Amplify Project with a React ApplicationUse the AWS Amplify withAuthenticator HOC to Implement a React User Authorization FlowManually Sign Up New Users in React with AWS Amplify Auth Class Create & Interact with an AWS AppSync GraphQL API with AWS AmplifyCreate & Interact with a Serverless REST API with AWS Lambda from ReactStore Data in Amazon S3 with React Deploy Your React Application to AWS Using the Amplify CLI,en,https://egghead.io/courses/building-serverless-web-applications-with-react-aws-amplify,Building Serverless Web Applications with React & AWS Amplify,nader dabit,6,8,-1,4.4,8,"React,React Native,AWS",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/217/thumb/EGH_AmplifyAWS_React_Final.png,33,on
,Introducing Reduce Redux Boilerplate with Redux-ActionsAdd redux-actions as a Dependency of a React and Redux AppRefactor a Redux Action Creator using the createAction function from redux-actionsModify a Redux Action¡¯s Payload upon Creation with redux-actionsCreate Multiple Redux Actions with an Action Map in redux-actionsCreate a Reducer Function for a Specific Redux Action using redux-actionsCombine Individual Reducer Functions into a Single Reducer with reduce-reducersHandle Multiple Actions using a Single Function with combineActions in redux-actionsCreate a Reducer Function for Multiple Redux Actions using redux-actionsHandle Error Conditions in a Reducer using redux-actionsAdd Meta Data to a Redux Action with redux-actions,en,https://egghead.io/courses/reduce-redux-boilerplate-with-redux-actions,Reduce Redux Boilerplate with Redux-Actions,Andy Van Slaars,6,11,-1,4.5,8,Redux,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/140/thumb/EGH_ReduxActions_1_Final.png,39,on
,Course Overview: Develop a Serverless Backend using Node.js on AWS LambdaCreate a User and setup the AWS CLI to interact with AWSSetup the Serverless FrameworkDeploy a Node.js function to AWS Lambda using the Serverless FrameworkAttach a HTTP endpoint to an AWS Lambda function using the Serverless FrameworkDeploy a DynamoDB table to AWS using the Serverless FrameworkDeploy an AWS Lambda function to store data in DynamoDB using the Serverless FrameworkDeploy an AWS Lambda to retrieve a record from DynamoDB with the Serverless Framework,en,https://egghead.io/courses/develop-a-serverless-backend-using-node-js-on-aws-lambda,Develop a Serverless Backend using Node.js on AWS Lambda,Nik Graf,6,8,-1,4.3,8,"AWS,Node.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/212/thumb/Egh_NodeAWSServerless_Final.png,15,on
,Course Overview: SEO Friendly Progressive Web Applications with Angular UniversalScaffold a New Angular App using Angular CLIAdd Bootstrap to an Angular CLI ProjectConfigure Defaults for Generating Code with Angular CLICreate Application Layout with Components in an Angular CLI ProjectCreate Container Components for Retrieving Data in an Angular CLI ProjectUse the Angular CLI Environment to Define ConstantsCreate an Angular Service to Retrieve Data from an API Create Presentational Components for Displaying Data in an Angular CLI ProjectCreate Angular Resolvers to retrieve the product data from the ServiceServer Side Render an Angular CLI Project with Angular UniversalDeploy an Angular CLI Project to now.shAdd dynamic metadata to an Angular CLI ProjectMake a Progressive Web Application from an Angular CLI project,en,https://egghead.io/courses/seo-friendly-progressive-web-applications-with-angular-universal,SEO Friendly Progressive Web Applications with Angular Universal,Bram Borggreve,6,14,-1,4.3,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/173/thumb/EGH_Angular-Universal_1000.png,28,on
,Composing CSS Utility Classes with Tailwind Course IntroductionCompile Tailwind to CSS with gulpCreate Custom Utility Classes in TailwindApply mobile-first Responsive Classes in TailwindStyle Elements on hover and focus with Tailwind¡¯s State VariantsChange Styles on Multiple Elements with Tailwinds group-hoverControl What Variations are Generated for Each Utility Class Module in TailwindKeep Specificity in Check when Working with TailwindExtending Tailwind with Responsive Custom Utility ClassesAbstract Utility Classes to BEM Components in TailwindCreate a Responsive Card Component by Composing Tailwind's Utility ClassesCustomize Tailwind¡¯s Naming Convention for Generated Utility ClassesRemoving Unused CSS in Tailwind with PurgeCSS,en,https://egghead.io/courses/build-user-interfaces-by-composing-css-utility-classes-with-tailwind,Build User Interfaces by Composing CSS Utility Classes with Tailwind,Simon Vrachliotis,6,13,-1,4.5,8,"Tailwind,CSS",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/183/thumb/EGH_CSSUtilityTailwinds.png,21,on
,"Introducing Angular Service Injection with the Dependency InjectorDefine an Angular ServiceRegister a Service to Angular¡¯s Dependency Injection MechanismCreate Multiple Angular Service InstancesDefine an Aliased Class Provider in AngularSimplify an Angular Service using a JavaScript Object as a Value ProviderInstantiate a Service using an Angular Factory ProviderPass Dependencies to a Factory Provider in AngularOverwrite a Service in a Component Subtree in AngularUse an Abstract Class as DI Token for your Services in AngularControl the dependency lookup with @Host, @SkipSelf and @OptionalAvoid Multiple Service Instances in Lazy Loaded Modules in Angular",en,https://egghead.io/courses/angular-service-injection-with-the-dependency-injector-di,Angular Service Injection with the Dependency Injector (DI),Juri Strumpflohner,6,12,-1,4.5,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/189/thumb/EGH_AngularServicesDI-2.png,36,on
,React with Mobx and TypeScript course introductionUsing MobX to Isolate a React Component State Understand and Control Mutations with MobX Dev Tools and @action in ReactOptimize Performance in a React App with MobX @computed PropertiesMaintainable Application State React Class Pattern using MobXCreating Reusable State Class Driven React ComponentsTest a React Applications using MobX with Jest,en,https://egghead.io/courses/develop-react-applications-with-mobx-and-typescript,Develop React Applications with Mobx and TypeScript,Basarat Ali Syed,6,7,-1,4.2,8,"React,MobX,TypeScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/184/thumb/EGH_React_Mobx_TS.png,24,on
,Introduction to Algorithms in JavaScriptRefactor a Loop in JavaScript to Use RecursionCreate a Divide and Conquer Function in JavaScriptCreate a Selection Sort Function in JavaScriptSort a Array with a QuickSort Function in JavaScriptRefactor a Linear Search into a Binary Search with JavaScriptSolve Complex Problems in JavaScript with Dynamic ProgrammingImplement a Breadth-first Search Function in JavaScriptClassify Mystery Items with the K-Nearest Neighbors Algorithm in JavaScriptPredict Outcomes with Regression Functions in JavaScript,en,https://egghead.io/courses/algorithms-in-javascript,Algorithms in JavaScript,Tyler Clark,6,10,-1,4.2,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/259/thumb/EGH_JSBasic-Algorithms_Final.png,42,on
,this in the Global Contextthis in Function Callsthis in Constructor Callsthis in Method CallsSpecify this using .call() or .apply()Hard-Bind a Function's this Value with the .bind() MethodCapture this with an Arrow Functionthis in Class Bodies,en,https://egghead.io/courses/understand-javascript-s-this-keyword-in-depth,Understand JavaScript's this Keyword in Depth,Marius Schulz,6,8,-1,4.6,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/167/thumb/EGH_JSthis_1000.png,18,on
,Course Overview: Testing React Components with Enzyme and JestInstall Enzyme and Configure JestTest Against Different React Releases with EnzymeShallow Render a React Component with EnzymeFind Nodes from a Shallow Rendered ComponentUnderstand the Different Accepted Selectors in EnzymeTest Enzyme Rendered Components with Jest SnapshotsTest React Component Props with Enzyme and JestFully Render React Components with EnzymeTest Simulated Event Handlers with EnzymeTest New Component State with setState in EnzymeTest React Component Lifecycle Methods with EnzymeTest React Component Methods with EnzymeTesting React Forms with EnzymeTest Redux Connect Components with Enzyme,en,https://egghead.io/courses/test-react-components-with-enzyme-and-jest,Test React Components with Enzyme and Jest,Tyler Clark,6,15,-1,4.4,8,"React,Jest",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/198/thumb/EGH_TestReactJest-edited.png,41,on
,Course Overview: Reactive State Management in Angular with ngrxSet Up ngrx Store for an Application FeatureIntegrate Redux devtools into an ngrx Angular ApplicationManage Data in the ngrx Store through a Reducer in AngularDispatch Strongly Typed Action Objects to an ngrx Store in Angular Simplify Collection Management with ngrx Entity in AngularSimplify Querying for State with ngrx Selectors in AngularHandle Async Operations with ngrx Effects in AngularImprove Server Communication in Ngrx Effects with NX Data Persistence in AngularConnect Related Angular Data  Models with Computed Data using ngrx SelectorsExtract Implementation Details of ngrx from an Angular Application with the Facade Pattern,en,https://egghead.io/courses/reactive-state-management-in-angular-with-ngrx,Reactive State Management in Angular with ngrx,Lukas Ruebbelke,6,11,-1,4.5,8,"Angular,NgRx",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/270/thumb/EGH_ngrxAngular_Final.png,85,on
,"Course Overview: Get started with ReasonSetting up reason-cli, first Steps with rtop and Editor Support in ReasonBasic Datatypes and Operators in ReasonLet bindings, Type Inference and Type Aliases in ReasonScope in Reasonif-else and Switch Expressions in ReasonRecords and Objects in ReasonVariants and Pattern Matching Variants using switch in ReasonElminate Illegal States in Reason with VariantsUsing Reason's Type optionDeclare Functions in ReasonChain Functions using the pipe/reverse-application Operator in ReasonRecursive Functions in ReasonTuples, Lists and Arrays in ReasonReference Equality vs Structural (deep) EqualityPattern Matching using switch in ReasonType Parameters in ReasonMutable let bindings in ReasonExceptions in ReasonImperative Loops (for & while) in ReasonModules in ReasonFirst steps using Reason with BuckleScript",en,https://egghead.io/courses/get-started-with-reason,Get Started with Reason,Nik Graf,6,22,-1,4.4,8,Reason,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/163/thumb/EGH_Reason_Final.png,73,on
,"Introduction to using the State ADT with ReduxDefine Discrete State Transitions using the State ADTCombine State Dependent Transactions with the State ADTTransition a Stateful ADT with Outside InputCompose Simple State ADT Transitions into One Complex TransactionRead and Transform Values from a State ADT¡¯s StateTransition State based on Existing State using the State ADTCombine Multiple State ADT Instances with the Same InputGenerate Randomness Using the State ADTUse a Pure RNG with the State ADT to Select an Element from StateMultiply Two Arrays over a Function in JavaScriptDraw Items from One JavaScript Array to Another using a Pair ADTRandomly Pull an Item from an Array with the State ADTPull Many Random Numbers in a Single State ADT TransactionAdapt Redux Actions/Reducers for Use with the State ADTCreate State ADT Based ReducersCombine Multiple State ADT Based Redux ReducersInitialize Redux Application State Using The State ADTDebug a Functional JavaScript composeK Flow Create a Redux Store for Use with a State ADT Based Reducer
Connect State ADT Based Redux Actions to a React ApplicationCreate Redux Middleware to Dispatch Multiple ActionsCreate Redux Middleware to Dispatch Actions with the Async ADTDispatch Multiple Asynchronous Redux Actions with ArgumentsExtend State ADT Based Transitions after React/Redux IntegrationDispatch a Single State ADT Based Redux Action",en,https://egghead.io/courses/redux-and-the-state-adt,Redux and the State ADT,Ian Hofmann-Hicks,6,26,-1,4.5,8,"Redux,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/267/thumb/EGH_ReduxStateADT_Final.png,98,on
,Restrict null and undefined via Non-Nullable-Types in TypeScriptUnderstand TypeScript¡¯s Control Flow Based Type AnalysisDefine Custom Type Guard Functions in TypeScriptMake Properties and Index Signatures Readonly in TypeScriptRepresent Non-Primitive Types with TypeScript¡¯s object TypeUse TypeScript¡¯s never Type for Exhaustiveness CheckingOverload a Function with TypeScript¡¯s Overload SignaturesCollect Related Strings in a String Enum in TypeScriptSpecify Exact Values with TypeScript¡¯s Literal TypesModel Alternatives with Discriminated Union Types in TypeScriptInfer Types for Rest and Spread Properties in TypeScriptQuery Properties with keyof and Lookup Types in TypeScriptTransform Existing Types Using Mapped Types in TypeScript,en,https://egghead.io/courses/advanced-static-types-in-typescript,Advanced Static Types in TypeScript,Marius Schulz,6,13,-1,4.7,8,TypeScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/137/thumb/EGH_AdvancedTS-edit.png,67,on
,Configure Recompose to Build React Components from RxJS StreamsPass a React Prop to a Stream in RxJSStream a React Component from an Ajax Request with RxJSHandle React Events as Streams with RxJS and RecomposeMerge RxJS Button Event Streams to Build a React Counter ComponentStream Props to React Children with RxJSStream Props to Multiple Children with React's Children.map  and RxJSCreate Stream Behaviors to Push Props in React Components with mapPropsStreamCompose Streams of React Props with Recompose¡¯s compose and RxJSMake Reusable React Props Streams with LensesRefactor React Render Props to Streaming Props with RxJS and Recompose,en,https://egghead.io/courses/build-react-components-from-streams-with-rxjs-and-recompose,Build React Components from Streams with RxJS and Recompose,John Lindquist,6,11,-1,4.6,8,"React,Recompose,RxJS",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/159/thumb/EGH_RxJSStreams_1000.png,24,on
,Course Overview: Using WebAssembly with RustSetup Rust for WebAssemblyLoad a WebAssembly Function Written in Rust and Invoke it from JavaScriptPass a JavaScript Function to WebAssembly and Invoke it from RustSet up wasm-bindgen for easy Rust/JavaScript InteroperabilityCreate a New Rust/Webpack Project using the rust-webpack TemplateDebug a WebAssembly Module Written in Rust using console.logAccess WebAssembly Memory Directly from JavaScriptUse the js-sys Crate to Invoke Global APIs Available in Any JavaScript EnvironmentCreate and Publish a NPM Package Containing Rust Generated WebAssembly using wasm-packRun WebAssembly in Node.js using the node-loader,en,https://egghead.io/courses/using-webassembly-with-rust,Using WebAssembly with Rust,Nik Graf,6,11,-1,4.1,8,Rust,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/218/thumb/EGH_WARust_Tank_Final.png,25,on
,Course Introduction: Safer JavaScript with the Maybe typeUnderstand the Maybe Data TypeCreate a Maybe with a `safe` Utility FunctionUnwrap Values from a MaybeSafely Access Object Properties with `prop`Safely Access Nested Object Properties with `propPath`Flatten Nested Maybes with `chain`Recover from a Nothing with the `alt` methodRecover from a Nothing with the `coalesce` MethodCompose Functions for Reusability with the Maybe TypeApply a function in a Maybe context to Maybe inputsMake your own functions safer by lifting them into a Maybe context,en,https://egghead.io/courses/safer-javascript-with-the-maybe-type,Safer JavaScript with the Maybe Type,Andy Van Slaars,6,12,-1,4.4,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/176/thumb/EGH_MaybeJS_Final.png,50,on
,Intro to Offline-First Progressive Web Apps in Vue.jsAdd a Web App Manifest to Create a Progressive Web ApplicationAdd Meta Tags for Other Browsers on a PWACache Static Assets with Service Workers using sw-precacheIntegrate Service Worker Generation into Webpack's Build with SW-PrecacheRegister a Service Worker in ProductionHot Reload Static Files by Clearing Service Worker Cache while DevelopingUse a no-op Service Worker in DevelopmentShow Notifications when a Service Worker is Installed or UpdatedCache External Resources during Runtime with sw-precacheCache Data from TCP/IP Connections with IndexedDBLazy load Images using Intersection Observer APICheck Online Status by using the NavigatorOnLine APILazy Load a Route by using the Dynamic Import in Vue.jsAudit your App with Chrome DevtoolsOptimize Assets Delivery using preload and prefetch,en,https://egghead.io/courses/offline-first-progressive-web-apps-pwa-in-vue-js,Offline-First Progressive Web Apps (PWA) in Vue.js,Alex Jover Morales,6,16,-1,4.5,8,Vue.js,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/154/thumb/offline_first.png,62,on
,Simplify Vue Components with vue-class-componentDefine Props on a Vue Class with vue-property-decoratorPlace Content in Components with Vue SlotsCreate Layouts with Named Vue SlotsPass Props Between Components with Vue Slot ScopePass Props to Vue Functional TemplatesControl Template Contents with Vue's Render FunctionAvoid Semantic HTML Names for Vue ComponentsWrite Vue Functional Components InlinePass Vue Render Functions as Props for Powerful PatternsSwitch Between Vue Components with Dynamic ComponentsLoad Vue Async ComponentsHandle Errors and Loading with Vue Async Components,en,https://egghead.io/courses/advanced-fine-grained-control-of-vue-js-components,Advanced Fine-Grained Control of Vue.js Components,John Lindquist,6,13,-1,4.5,8,Vue.js,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/180/thumb/EGH_AdvancedVue.png,33,on
,Model Simple Data in a Graph For Use in Neo4JCreate Nodes and Relationships in Neo4J with CypherRead Nodes and Relationships in Neo4J with CypherUpdate Nodes and Relationships in Neo4J with CypherDelete Nodes and Relationships in Neo4J with CypherUse neo4j-graphql-js to Create a Simple APIExplicitly Model Schema Relationships with the @relation Directive in neo4j-graphql-jsCreate Data in Neo4J Through a GraphQL APICreate Custom GraphQL Mutations with the @cypher Directive in neo4j-graphql-jsBuild Complex Schema Relationships with the @cypher Directive in neo4j-graphql-js,en,https://egghead.io/courses/build-a-neo4j-graphql-api,Build a Neo4J & GraphQL API,Matt Ross,6,10,-1,3.8,8,"Neo4j,GraphQL",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/260/thumb/EGH_GraphQL_Neo4j_Final.png,17,on
,"Describe Your Application Domain Using mobx-state-tree(MST) ModelsAttach Behavior to mobx-state-tree Models Using ActionsTest mobx-state-tree Models by Recording Snapshots or PatchesDerive Information from Models Using ViewsRender mobx-state-tree Models in ReactBuild Forms with React to Edit mobx-state-tree ModelsRemove Model Instances from the TreeCreate an Entry Form to Add Models to the State TreeStore Store in Local StorageRestore the Model Tree State using Hot Module Reloading when Model Definitions ChangeMore mobx-state-tree Types: map, literal, union, and enumerationDefining Asynchronous Processes Using FlowCreate Relationships in your Data with mobx-state-tree Using References and IdentifiersLoading Data from the ServerUse Volatile State and Lifecycle Methods to Manage Private StateAutomatically Send Changes to the Server by Using onSnapshotCreate Dynamic Types and use Type Composition to Extract Common Functionality",en,https://egghead.io/courses/manage-application-state-with-mobx-state-tree,Manage Application State with Mobx-state-tree,Michel Weststrate,6,17,-1,4.7,8,"React,MobX",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/169/thumb/EGH_MobxStateTree.png,79,on
,Course Overview: React Native Navigation for Mobile ApplicationsSetup a StackNavigator as a Modal in React NavigationUse the React Native Modal Component with React NavigationCreate an Authentication Flow with React NavigationOpen a Modal from Tab Bar in React NavigationOverride Default Transitions in React Native with StackNavigator's transitionConfig ObjectBuild Fine-grained Screen Transitions with a Custom React Navigation InterpolatorReplace a Screen with React Navigation,en,https://egghead.io/courses/react-navigation-for-native-mobile-applications,React Navigation for Native Mobile Applications,Spencer Carli,6,8,-1,4.3,8,React Native,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/194/thumb/EGH_ReactMobileNav_Final.png,21,on
,Course Introduction: Testing with Puppeteer and JestSetup and Install Dependencies for Testing with Google's PuppeteerTest HTML Content on a Webpage with PuppeteerReplicate User Activity with Faker and PuppeteerWork with Document Cookies in Tests with PuppeteerCheck for Console Logs and Exceptions with PuppeteerSave Screenshots of Applications with PuppeteerHandle Page Requests in Tests with Puppeteer Visual Differing Tests with Puppeteer and PixelMatch,en,https://egghead.io/courses/end-to-end-testing-with-google-s-puppeteer-and-jest,End to End Testing with Google's Puppeteer and Jest,Tyler Clark,6,9,-1,4.3,8,"Puppeteer,Jest,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/186/thumb/EGH_GooglePuppeteer_Final.png,34,on
,"Angular Material Components Course Overview Install and Configure a Project with Angular MaterialUse the Angular Material Sidenav ComponentCreate an Extended Header Using Angular Material ToolbarsUtilize Material Design Icons for App Icons and ButtonsManage User Input with Angular Material InputsManage Loading with Angular Material Progress Bars and SpinnersCreate Tabbed Interfaces using Angular Material TabsManage Date Selection with the Angular Material Datepicker
 Manage Notifications with the Angular Material SnackbarManage Application Dialogs with the Angular Material Dialog ComponentManage Tabular Data with the Angular Material Datatable ComponentCreate and Manage Themes with Angular Material Theming",en,https://egghead.io/courses/structure-angular-apps-with-angular-material-components,Structure Angular Apps with Angular Material Components,Brian Troncone,6,13,-1,4.4,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/150/thumb/EGH_Angular_Material_Structure.png,43,on
,Course Overview: Advanced React Component PatternsBuild a Toggle ComponentWrite Compound ComponentsMake Compound React Components FlexibleValidate Compound Component Context ConsumersPrevent Unnecessary Rerenders of Compound Components using React ContextUse Render Props with ReactUse Prop Collections with Render PropsUse Prop Getters with Render PropsUse Component State InitializersImplement Component State ReducersImprove the usability of Component State Reducers with state change typesMake Controlled React Components with Control PropsSupport Control Props for all stateSupport a state change handler for all control propsImprove the usability of Control Props with state change typesImplement the Provider Pattern with React ContextImplement a Higher Order Component,en,https://egghead.io/courses/advanced-react-component-patterns,React Class Component Patterns,Kent C. Dodds,6,18,-1,4.5,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/166/thumb/EGH_ReactAdvPatterns2_Final.png,56,on
,Bootstrap a React Application with Yarn & Create React AppRender a React UI with JSXRender in React Based on a Global State ObjectRefactor JSX in React to Stateless Functional ComponentsCreate a Redux-Style Reducer FunctionCreate a Redux StoreRender React UI Based on State Changes with Subscribe in ReduxKeep UI and State Synchronized Using Controlled Components in React with ReduxMake Dispatching Redux Actions More Reliable With Action CreatorsCreate Redux Dispatch Functions From Action Creators with bindActionCreatorsConnect Redux to a React Application with react-reduxHandle Actions in Redux with mapDispatchToPropsUse mapDispatchToProps Shorthand Syntax in ReduxConnect Redux to Individual React Components For More Efficient RenderingSetup a Mock API Server with the json-server npm moduleDispatch Asynchronous Actions with Redux Thunk MiddlewareSave New Records on The Server with Redux Thunk and FetchConfigure and Use Redux Dev ToolsCreate a React Component to Display Status MessagesUse Multiple Reducers in Redux with combineReducersRespond to a Single Redux Action in Multiple ReducersUpdate Existing Records on The Server with Redux Thunk and FetchDelete Existing Records on The Server with Redux Thunk and FetchAdd React Router to a Redux ApplicationFilter State Data in Redux with a Selector Function and React RouterConfigure a React & Redux Application For Production Deployment and Deploy to Now,en,https://egghead.io/courses/build-a-react-app-with-redux,Build A React App With Redux,Andy Van Slaars,6,26,-1,4.7,8,"React,Redux",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/135/thumb/EGH_ReactRedux_Final.png,111,on
,Course Overview: JSON Web Token (JWT) Authentication with Node.jsSetup a Web Server in Node.js using ExpressSet the Server Port in Express Using Environment VariablesAdd a POST Route To Express And Parse the BodyProvide Users With A JSON Web TokenAllow CORS in Node.js and ExpressAuthenticate Users With JWT for Access to Protected ResourcesConnect a Front-End to a Secure API using JWTsAuthenticate Users in a Single Page Application with Auth0,en,https://egghead.io/courses/json-web-token-jwt-authentication-with-node-js-and-auth0,JSON Web Token (JWT) Authentication with Node.js and Auth0,Joel Lord,6,9,-1,4.2,8,"Express,JWT,Node.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/207/thumb/EGH_JSONTokensNode_Final.png,32,on
,Install PythonManage Dependencies with Python Virtual EnvironmentsUse Python Interactively with the REPL ConsoleCheck for None (Null) in PythonUnderstand Mutable vs. Immutable objects in PythonExecute a Python ScriptPerform Math Operations in PythonFormat Strings in PythonManipulate and Search Strings with Python MethodsAdd Flow Control to your Python applicationUse Comparison Operators in PythonUse Lists in PythonSlice Lists in PythonUnderstand List Comprehensions in PythonManipulate Data with Dictionaries in PythonCreate Immutable Values in Python with TuplesCreate Unique Unordered Collections in Python with SetInvoke the built-in help system with python's dir and help methodsCreate a Log for your Python applicationRead Input in Python from the ConsoleCreate Reusable Components with Functions in PythonReuse Code in Multiple Projects with Python ModulesRead and Parse Files in PythonWrite to a File in PythonHandle Exceptions to prevent crashes in PythonUnderstand Scope in PythonUse Python ClassesManage packages with pip in Python,en,https://egghead.io/courses/introduction-to-the-python-3-programming-language,Introduction to the Python 3 Programming Language,Will Button,6,28,-1,4.4,8,python,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/129/thumb/EGH_IntroPython.png,95,on
,"Understand why Transducers can Improve PerformanceWrite Reducers for Different Data Types
Understand Transformer FunctionsRewrite Map and Filter as ReducersCreate Map and Filter TransducersImprove Composition with the Compose CombinatorTransduce over any Iteratable CollectionMake an Into Helper to Remove Boilerplate and Simplify our Transduce APITransduce When the Collection Type is an ObjectCreate a Sequence Helper to Transduce Without Changing Collection TypesAdd the Transducer Protocol to Support Arbitrary Data Types as our Target CollectionsMeasure the Performance of our TransducersUse Transducers in Production",en,https://egghead.io/courses/quickly-transform-data-with-transducers,Quickly Transform Data with Transducers,Paul Frend,6,13,-1,4.6,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/149/thumb/EGH_Transducers_Final.png,53,on
,Install the NPM Dependencies Needed for a Universal React AppConfigure Webpack to Work with React Universal ComponentConfigure Express / React / Babel to Work with React Universal ComponentConfigure hot module reloading to work with react-universal-componentCode-Splitting Components with the Universal Higher-Order ComponentDynamically Load a Code-Split Universal React Component via a PropConfigure a Custom Universal React Loading ComponentAnimate a Universal React Loading Component using Delay Options and Component HooksSet an Error Component in React Universal when a Component Fails to LoadPreload a Universal Component On-Demand with the Preload MethodLoad a Universal React Named Exported Component with the Key OptionAdd Redux with Server-to-Client State Hydration to a React Universal ProjectLazy Load Redux Reducers with Code-split Universal React Components using onLoad,en,https://egghead.io/courses/build-a-server-rendered-code-split-app-in-react-with-react-universal-component,Build a Server Rendered + Code Split App in React with React Universal Component,Tim Kindberg,6,13,-1,4.5,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/164/thumb/EGH_ReactSplit.png,45,on
,Create a FormControl Dynamically with Reactive Forms in AngularDynamically Create Multiple FormControls from a Data Set in AngularDynamically Render Different Form Input Types with Angular¡¯s Reactive FormsCreate Dynamic Select Boxes with Angular¡¯s Reactive FormsCreate Dynamic Radio Button Lists with Angular¡¯s Reactive FormsAdd Validation to Dynamic Forms in AngularCreate a Dynamic Angular Form with ngx-formly,en,https://egghead.io/courses/create-dynamic-forms-in-angular,Create Dynamic Forms in Angular,Juri Strumpflohner,6,7,-1,4.4,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/161/thumb/EGH_A2_Dynamic_Forms_1000.png,27,on
,Angular Tab Component OverviewDeclare a Template within a Template using `ng-template` in AngularPass a Reference of an ng-template to a Component and Render it in AngularPass Data to a Dynamic ng-template using ngTemplateOutletContext in AngularDefine an Anchor Point Where to Render Dynamic Components in AngularDynamically Instantiate an Angular ComponentDestroy a Dynamically Instantiated Angular Component,en,https://egghead.io/courses/create-dynamic-components-in-angular,Create Dynamic Components in Angular,Juri Strumpflohner,6,7,-1,4.4,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/171/thumb/EGH-angular-components__1000px.png,23,on
,Fetch Data from an API using the HttpClient in AngularSend Data via HTTP using Angular HttpParamsHandle HTTP Errors in Angular with HttpErrorResponseRetry Failed Requests with RxJS and the HttpClient in AngularSet Metadata in HTTP Headers with Angular HttpHeadersRead Custom HTTP Headers Sent by the Server in AngularFetch non-JSON data by specifying HttpClient responseType in AngularType Check an Http Response using the Angular HttpClient and TypeScript Provide Feedback to Progress Events with Angular¡¯s HttpRequest ObjectIntercept HTTP Requests with Angular¡¯s HttpInterceptorMock HTTP Requests made with Angular¡¯s HttpClient in Unit Tests,en,https://egghead.io/courses/learn-http-in-angular,Learn HTTP in Angular,Juri Strumpflohner,6,11,-1,4.4,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/147/thumb/EGH_AngularHTTP.png,42,on
,Course Overview: Optimistic UI Updates in ReactExamine Real World Optimistic UI UpdatesOptimistically Update UI for a Snappier User ExperienceOptimistically Update Multiple Values in State Using React's setStateRefactor Inlined React setState Function to a setState Updater FactoryRevert State On Request Failure using React setState and ClosuresPrevent Doubly Updating and Reverting State in ReactUpdate state asynchronously in React using Promise and setState()Add a loading indicator to UI for request in progress using setState()Handle a rejected promise and display error to user using setState()Optimistic UI update in React using setState()Restore Target Items in React State for Improved Optimistic UI Updates,en,https://egghead.io/courses/optimistic-ui-updates-in-react,Optimistic UI Updates in React,Erik Aybar,6,12,-1,4.0,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/193/thumb/EGH_OptimisticReact_Final.png,25,on
,Use Poi to Build an Index.js with Modern JavaScript FeaturesCustomize Poi's Default index.html TemplateConfigure Poi for Advanced Template ControlBuild a Vue App with PoiCustomize Babel to Build a React App with PoiCompile CSS or Sass with PoiUse Markdown as React Components by Adding a Webpack Loader to PoiBuild and Analyze Your JavaScript Bundles with PoiUse Poi Presets from npm to Skip ConfigurationSetup PostCSS and Tailwind with Poi,en,https://egghead.io/courses/make-webpack-easy-with-poi,Make Webpack Easy with Poi,John Lindquist,6,10,-1,4.2,8,webpack,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/158/thumb/EGH_WebpackPoi_1000.png,15,on
,Start a Nuxt Project with npx and the Vue.js CLIAdd a CSS Library from npm to NuxtAdd JavaScript Libraries from npm to NuxtCreate a Vuex Store for Global Data in NuxtLoad Data into the Vuex Store in NuxtAccess the Router Params to Load Page-Specific Data in Vue.js and NuxtBuild Global Navigation with Layouts and nuxt-link in NuxtCreate CSS Transition Effects in Vue.js and NuxtStyle a List and List Items in Vue.js and NuxtRegister Vue.js Filters as Plugins in NuxtStyle Navigation Based on Route in NuxtDisplay Only Available Data in Vue.js and NuxtDisplay a User Data Page Based on id in Vue.js and NuxtBuild a Recursive Component for Nested Comments in Vue.js and Nuxt,en,https://egghead.io/courses/create-a-news-app-with-vue-js-and-nuxt,Create a News App with Vue.js and Nuxt,John Lindquist,6,14,-1,4.3,8,"Vue.js,Nuxt.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/146/thumb/EGH_VueNuxtNews.png,36,on
,Convert Sass (SCSS) Styled Button to CSS-in-JS with JavaScript Templates and VariablesImport JavaScript Variables for Styling with CSS-in-JSImport and Render Style Partials from JavaScript Modules with CSS-in-JSUse JavaScript Functions as Mixin Directives for CSS-in-JS Style DeclarationsDestructure Named CSS-in-JS Arguments to use in JavaScript Mixin FunctionsDefine and Override Default CSS-in-JS Values for Arguments in a JavaScript Function MixinApply Multiple CSS-in-JS Arguments in a JavaScript Mixin Function with the Rest OperatorExpress CSS with JavaScript Objects for CSS-in-JS NotationUse JavaScripts Spread Operator to Apply Style Objects Returned from CSS-in-JS MixinsPrevent CSS Class Name Collisions with Scoped Class Names in CSS-in-JSStyle HTML with JavaScript Template Strings and Objects in CSS-in-JS,en,https://egghead.io/courses/convert-scss-sass-to-css-in-js,Convert SCSS (Sass) to CSS-in-JS,Oleg Isonen,6,11,-1,3.9,8,"CSS,JavaScript,SCSS",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/191/thumb/EGH_SASS-CSS_Finalv2.png,23,on
,Add Redux to a React applicationUse actions to modify the state of the Redux storeAdd redux-observable to an existing Redux projectDebug redux-observable with redux dev-toolsUse redux-observable for simple Ajax requestsCreate a queue of Ajax requests with redux-observable and group the results.Debounce user input to avoid repeated Ajax requestsHandle network errors gracefullyFilter a stream to exclude empty valuesUse an action to cancel an Ajax requestTesting the output of epicsMocking an ajax request when testing epicsUse tests to verify updates to the Redux store,en,https://egghead.io/courses/up-and-running-with-redux-observable,Up and Running with redux-observable,Shane Osbourne,6,13,-1,4.5,8,"React,RxJS,Redux,redux-observable",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/142/thumb/EGH_ReduxObservable_Final.png,80,on
,Course Overview: Style and Theme Ionic v3 ApplicationsCustomize Ionic v3 Default Theme ColorsOverride Global SASS Variables in Ionic v3 ApplicationsSet Ionic v3 Config ParametersStyle an Ionic v3 Component on a Single PageAlign and Size Text with Ionic v3 CSS UtilitiesStructure an Application UI with Ionic v3 GridLay Out Content with Ionic v3 CSS UtilitiesAlign Elements with Ionic v3 Grid,en,https://egghead.io/courses/style-and-theme-ionic-v3-applications,Style and Theme Ionic v3 Applications,Chris Griffith,6,9,-1,3.9,8,Ionic,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/201/thumb/EGH_StyleIonic_Final.png,18,on
,"Course Introduction: Optimize User Experience for Mobile Devices and BrowsersUse Chrome Developer Tools to Emulate Different Mobile DevicesUse Remote Sources to Debug a Web App on an Emulator, Simulator, or Physical DeviceScale a Page Correctly for Small Viewports with a <meta> TagMake a horizontal-scrolling MenuMake a <select> Field that Takes Advantage of Native Browser BehaviourMake a nav Menu Available from a fixed-position HeaderUse Sticky Positioning for Section HeadersShow Images of Differing Resolutions Depending on the Viewport Width with srcsetShow Different Variations of Images Depending on the Viewport Width using Art Direction",en,https://egghead.io/courses/optimize-user-experience-for-mobile-devices-and-browsers,Optimize User Experience for Mobile Devices and Browsers,Rory Smith,6,10,-1,3.9,8,"HTML 5,CSS,Android,iOS",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/151/thumb/EGH_OptimizeUXMobile_Final.png,32,on
,Write an Asynchronous Function with async/awaitCall an Asynchronous Function in a Promise ChainConvert Any Function into an Asynchronous FunctionHandle Errors in Asynchronous FunctionsAwait Multiple Promises Sequentially or ConcurrentlyAwait Multiple Promises Concurrently with Promise.all()Use the await Operator with Any ThenableIterate Asynchronously with the for-await-of Loop,en,https://egghead.io/courses/asynchronous-javascript-with-async-await,Asynchronous JavaScript with async/await,Marius Schulz,6,8,-1,4.6,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/118/thumb/EGH_AsyncJSAwait_Final-01.png,18,on
,"Start a Virtual Reality Project Using the React VR CLIBuild 3D Panorama Scenes Using the Pano Component in React VRWrite Text Using the Text Component in React VRStructure 2D Content like Images and Text Using the View Component in React VRAdd Shapes Using 3D Primitives in React VRAdd Lighting Using Light Components in React VRRender Custom 3D Objects Using the Model Component in React VRCompose Multiple 3D Objects into one Component in React VRCapture User Interaction with React VRAnimate Text, Images, Views, and 3D Elements Using the Animated Library in React VR",en,https://egghead.io/courses/build-virtual-reality-experiences-using-react-vr,Build Virtual Reality Experiences Using React VR,Nik Graf,6,10,-1,4.5,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/127/thumb/EGH_ReactVR-Final.png,36,on
,Add styles to a component in AngularStyle HTML elements in Angular using the style propertyConditionally add a single CSS class to a DOM element in AngularStyle HTML elements in Angular using ngClassStyle HTML elements in Angular using ngStyleUse Angular style sanitization to mark dynamic styles as trusted valuesUse Angular¡¯s @HostBinding and :host(...) to add styling to the component itselfUse :host-context and the ::ng-deep selector to apply context-based stylingUse the Renderer2 to add styles to an element in Angular,en,https://egghead.io/courses/understand-how-to-style-angular-components,Understand How to Style Angular Components,Juri Strumpflohner,6,9,-1,4.4,8,"Angular,CSS",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/132/thumb/EGH_Angular_Style-Final.png,24,on
,"Install the Latest Version of GatsbyInstall Plugins for Transforming Markdown with GatsbyFormat Markdown Files for Gatsby.jsUse the GraphiQL Browser to Build Queries for GatsbyCreate a Home Layout Component with a GraphQL Query in GatsbyOrganize React Components in a Gatsby ProjectAdd a List of Posts to a Gatsby Blog with a GraphQL Page QueryBuild Gatsby Page Slugs Dynamically from Markdown with gatsby-node.js Build a Blog Post Template with GraphQL and GatsbyAdd Next and Previous Links to a Gatsby BlogExpose Post Tag Data for a Gatsby BlogUse PageContext to Display Tags in GatsbyDeploy a Gatsby Site with Netlify
",en,https://egghead.io/courses/build-a-blog-with-react-and-markdown-using-gatsby,Build a Blog with React and Markdown using Gatsby,Taylor Bell,6,13,-1,4.0,8,"Gatsby,React",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/157/thumb/EGH_GatsbyBlog.png,31,on
,Understand the FizzBuzz coding problem and its solutionSort arrays in TypeScriptCase insensitive sorting for string arraysDetermine if two strings are an anagramDetermine if a string is a palindromeBubble sort using TypeScriptInsertion sort algorithm using TypeScriptQuicksort algorithm using TypeScriptMerge sort algorithm using TypeScriptBinary Search Algorithm using TypeScriptFind the repeated item in an array using TypeScriptCreate random integers in a given rangeStack implementation using TypeScriptQueue implementation using TypeScriptImplement a singly linked list in TypeScriptImplement a doubly linked list in TypeScriptParse a string to an integerShuffle an arrayImplement the heap data structure using JavaScriptFind Max Items and Max Height of a Completely Balanced Binary TreeImplement the Heapsort algorithm using TypeScript / JavaScriptMinimum / Maximum Maintenance algorithm implementation using JavaScript / TypeScriptMedian Maintenance algorithm implementation using TypeScript / JavaScriptMaximum Contiguous Subarray algorithm implementation using TypeScript / JavaScript,en,https://egghead.io/courses/build-algorithms-using-typescript,Build Algorithms using Typescript,Basarat Ali Syed,6,24,-1,4.5,8,TypeScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/128/thumb/EGH_TS-Algorithms.png,97,on
,Create a Vuex Store using TypeScriptAccess State by using Vuex getter functions with TypeScriptModify State by using Vuex Mutations with TypeScriptUse Vue Tools to Navigate Across the Vuex StatePerform Async Updates using Vuex Actions with TypeScriptHandle Forms Connected to a Vuex Store using TypeScriptSplit Vuex Store into Modules using TypeScriptLazy Load a Vuex Module at Runtime using TypeScriptAccess the Root State from a Vuex Module using TypeScriptUse Namespaces in Vuex Stores using TypeScriptCall a Root Vuex Mutation or Action from within a Module in TypeScriptWrite a Vuex Plugin using TypeScriptAdd options to a Vuex plugin using TypeScript,en,https://egghead.io/courses/vue-js-state-management-with-vuex-and-typescript,Vue.js State Management with Vuex and TypeScript,Alex Jover Morales,6,13,-1,4.4,8,"Vue.js,TypeScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/136/thumb/VuexStorageTS.png,37,on
,Error Handling using Error Boundaries in React 16Render Multiple Elements without a Wrapping Element in a Component in React 16Render Text Only Components in React 16Render Elements Outside the Current React Tree using Portals in React 16Define DOM Attributes in React 16Call setState with null to Avoid Triggering an Update in React 16Render Multiple Elements using React.Fragment and the JSX Fragment Syntax <> in React 16.2Create a DOM reference using createRef in React 16.3Forward a DOM reference to another Component using forwardRef in React 16.3Update State Based on Props using the Lifecycle Hook getDerivedStateFromProps in React16.3Capture values using the lifecycle hook getSnapshotBeforeUpdate in React 16.3Pass Data through a Component Tree using Context Providers and Consumers in React 16.3,en,https://egghead.io/courses/leverage-new-features-of-react-16,Leverage New Features of React 16,Nik Graf,6,12,-1,4.3,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/152/thumb/EGH_React16.png,39,on
,Find Postgres Data That Doesn¡¯t Match Join Conditions with Full Outer JoinFind Lonely Postgres Data with Left and Right JoinDetect Duplicates in Postgres with Cartesian ProductFind Related Data with Inner Join in PostgresSee All Rows from Different Postgres Tables with Union AllJoin Tables in Postgres with Complex ConditionsCreate a History Table in Postgres with JoinsUse Joins to Detect Orphaned Data in Postgres,en,https://egghead.io/courses/understand-joins-and-unions-in-postgres,Understand Joins and Unions in Postgres,Brett Cassette,6,8,-1,4.4,8,PostgreSQL,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/108/thumb/EGH_Postgres_Unions_Final.png,15,on
,"Summary & Concepts of the Twelve-Factor AppPin Down NPM Package Versions with Yarn.lockUse Git Flow as a Reliable Version Control ModelManage Configuration Values with Environment VariablesProxy Requests for Local and Remote Service ParityBuild, Release and Run Containers with Docker ComposeRun Stateless Docker ContainersExport Services with Docker Port BindingScale Docker Horizontally with Nginx Load BalancingEnsure Containers Run with High-AvailabilityRun Consistent Dev, Stage & Prod Docker EnvironmentsPipe Log Output to STDOUT with DockerRun One-Off Docker Containers",en,https://egghead.io/courses/build-a-twelve-factor-node-js-app-with-docker,Build a Twelve-Factor Node.js App with Docker,Mark Shust,6,13,-1,4.0,8,"Docker,Node.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/120/thumb/EGH_NodeDocker_1000.png,30,on
,"Pick a Lesson TitleTeach Step-by-StepShow First, then Maybe ExplainRemove DistractionsAvoid Intros and OutrosStay on TopicGuide Their EyesPrepare to Record - Screen Resolution and Mic CheckRecord One Thought at a TimeEdit with Ripple DeleteReformat Code to Fit the Screen",en,https://egghead.io/courses/record-badass-screencasts-for-egghead-io,Record Badass Screencasts for egghead.io,John Lindquist,6,11,-1,4.8,8,egghead,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/082/thumb/EGH_Instructor_Screencasts.png,13,on
,Install and Configure the Entry Point of react-intlConvert a Hard Coded String using react-intl FormattedMessageRender Content with Placeholders using react-intl FormattedMessageRender Content with Markup Using react-intl FormattedHTMLMessageFormat Date and Time Using react-intl FormattedDate and FormattedTimeFormat a Date Relative to the Current Date Using react-intl FormattedRelativeFormat Numbers with Separators and Currency Symbols using react-intl FormattedNumberRender Content Based on a Number using react-intl FormattedMessageUse a react-intl Higher Order Component to format messages and get current localeWrite tests for react-intl output using enzyme and JestUse Webpack to Conditionally Include an Intl Polyfill for Older Browsers,en,https://egghead.io/courses/add-internationalization-i18n-to-a-react-app-using-react-intl,Add Internationalization (i18n) to a React app using React Intl,Damon Bauer,6,11,-1,4.5,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/124/thumb/EGH_React_i18n.png,38,on
,Initialize a LoopBack Node.js Project through the CLICreate a model to persist data in a Node.js LoopBack APIPersist in-memory data to a file when developing Node.js LoopBack API'sSetup a development mode in LoopBack API using nodemonCreate a relation between two LoopBack modelsDefine a remote method on a LoopBack modelAdd validation rules to a model in LoopBack API Add unit tests to a LoopBack API projectAdd Operation Hooks to a LoopBack modelConfigure ACL¡¯s to protect the LoopBack APICreate a boot script to run code at the start of a LoopBack APICreate a MongoDB DataSource in LoopBackCreate a free database on MongoDB AtlasFilter model data in LoopBackDeploy a LoopBack API project using now.sh,en,https://egghead.io/courses/build-a-node-js-rest-api-with-loopback,Build a Node.js REST API with LoopBack,Bram Borggreve,6,15,-1,4.4,8,"Loopback,Node.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/122/thumb/EGH_NodeJSLoopback_Final.png,31,on
,Handle Side Effects with Redux Saga Generator FunctionsControl when Saga Generators are Called with TakeLatestImplement Synchronous Side Effects with Blocking Saga EffectsImplement Asynchronous Side Effects with Non-Blocking Saga EffectsRun Sagas Concurrently with Saga HelpersCreate an Action Channel/Queue in Redux SagaTest Simple and Complex Effects in Redux Saga,en,https://egghead.io/courses/async-react-with-redux-saga,Async React with Redux Saga,Tyler Clark,6,7,-1,4.0,8,"React,Redux",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/165/thumb/EGH_ReduxSaga.png,26,on
,Setup React Native Video for iOS and AndroidUse Local Files or Remote Video Files with React Native VideoShow An Error Message When A Video Fails to Load in React NativeShow an Animated Buffering Icon When Remote Videos are Loading in React NativeCreate a Looping Background Video with React Native VideoCreate a Video that Auto Plays when Scrolled into View in React NativeCreate Custom Controls for React Native VideoCreate Controls that Hide/Show When Video Is Interacted With in React Native,en,https://egghead.io/courses/fundamentals-of-react-native-video,Fundamentals of React Native Video,Jason Brown,6,8,-1,4.3,8,React Native,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/133/thumb/EGH_ReactVideo_Final.png,39,on
,Course Overview: Integrate IBM Domino with Node.jsIdentify Authentication Errors from Domino when using a Node.js Express ApplicationAuthenticate with IBM Domino via a Node.js Application to Extract a Session CookieStore an IBM Domino Cookie sent from a Node.js Server in Browser Local StorageExpose IBM Domino User Information as JSONSend IBM Domino User Information via a Node.js Application.Encrypt IBM Domino User Roles Data into a JWT in a Express ApplicationSend JWT Encrypted User Role Data from Client Local Storage to Express ServerDecode and Verify JWT Encoded Data in ExpressPost Data Captured in Client to IBM Domino via Node.jsUpdate and Delete Data in IBM Domino REST API via Node.jsMerge and Manipulate IBM Domino Server Side Generated HTML in Express using cheerioRender Domino Data using Handlebars templates in Express,en,https://egghead.io/courses/integrate-ibm-domino-with-node-js,Integrate IBM Domino with Node.js,Mark Barton,6,13,-1,4.4,8,"Express,Node.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/200/thumb/EGH_NodeJSDomino.png,57,on
,Introduction - Functional programming concepts in PureScriptSpecify Function Arguments using Types in PureScriptUse One Function Argument at a Time with Currying and Partial Application in PureScriptBasic Data Constructors in PureScriptBreak up Expressions into Cases in PureScript using Simple Pattern Matching Types Alias and Instances in PureScriptRecursion in PurescriptCreating your own length function using recursion in PurescriptAlgebraic data type in PureScript and Show instanceLists and Infix operators in PureScriptFunctor and map in PureScriptFilter in PureScriptConcat and ConcatMap in PureScriptFoldl in PureScriptMaking functions using foldl in PureScript,en,https://egghead.io/courses/functional-programming-concepts-in-purescript,Functional Programming Concepts in Purescript,Vincent Orr,6,15,-1,3.9,8,PureScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/145/thumb/EGH_FuncPurescript_Final.png,51,on
,"Create a ""Hello World"" app using ElectronLoad JavaScript in an Electron BrowserWindowLoad CSS in a Electron BrowserWindowCreate a native desktop system menu with the Electron Menu moduleDisplay native desktop dialog windows with ElectronSave/Open a file with an Electron dialog windowUnderstand Electron¡¯s main and renderer process architectureCommunicate between Electron processes using IPCCommunicate between Electron processes using the remote moduleCreate an icon for your Electron appPackage your Electron application into a executable file with electron-builderCode sign your Electron application with electron-builderShip updates to your Electron app with `autoUpdater` (Mac)Ship updates to your Electron app with `autoUpdater` (Windows)",en,https://egghead.io/courses/build-a-desktop-application-with-electron,Build a desktop application with Electron,Cameron Nokes,6,14,-1,4.3,8,Electron,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/119/thumb/EGH_Electron_Final.png,59,on
,Organize your terminal using tmux panesCreate collections of panes using tmux windowsReuse terminal workspaces using tmux sessionsManage terminal workspaces using session namingZoom and resize to view a particular pane within tmuxCustomize tmux with tmux.confCopy and paste text from a tmux sessionEnable mouse mode in tmuxAutomate your workflow using tmux scriptsShare a tmux session for pair programming with sshHandle history in tmux sessions,en,https://egghead.io/courses/wrangle-your-terminal-with-tmux,Wrangle your terminal with tmux,Bonnie Eisenman,6,11,-1,4.6,8,tmux,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/099/thumb/EGH_TMUX_Final_2x.png,27,on
,Add version control to npm packages using git initAdd manifest files to npm packages using npm initSet up compilation of source code using babel with npm scriptsRun builds on file changes using watch with npm scriptsSet up testing of source code using jest with npm scriptsAdd package functionality using npm scriptsTest npm packages locally in another project using npm linkDocument npm packages using README filesPublish npm packages using npm publishUpdate published npm packages using np,en,https://egghead.io/courses/publish-javascript-packages-on-npm,Publish JavaScript packages on npm,Trevor Miller,6,10,-1,4.5,8,"npm,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/101/thumb/EGH_JS_NPM_Final.png,21,on
,Write a Vue Component as a Class in TypeScriptExtend Vue Components in TypeScriptUse Vue Router in TypeScriptCreate Type-Safe Vue Directives in TypeScriptUse Properties in Vue Components Using @Prop Decorator with TypeScriptUse Two-Way Binding in Vue Using @Model Decorator with TypeScript Watch for Changes in Vue Using the @Watch Decorator with TypeScriptUse Dependency Injection in Vue Using @Inject and @Provide Decorators with TypeScriptCreate your own Decorators in Vue with TypeScriptUse AOP in Vue Components with TypeScript and Kaop-tsDecouple Dependencies Using IoC Containers in Vue with TypeScript and InversifyJS,en,https://egghead.io/courses/use-typescript-to-develop-vue-js-web-applications,Use TypeScript to Develop Vue.js Web Applications,Alex Jover Morales,6,11,-1,4.2,8,"Vue.js,TypeScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/131/thumb/EGH_TSVue_Final.png,38,on
,Use JavaScript (ES6) generators to pause function executionSend messages to and from JavaScript (ES6) generatorsError handling in JavaScript (ES6) generatorsIterate over JavaScript (ES6) generatorsDelegate JavaScript (ES6) generator iteration controlUse JavaScript (ES6) generators with Promises to handle async flows,en,https://egghead.io/courses/write-simple-asynchronous-code-with-javascript-generators,Write simple asynchronous code with JavaScript generators,Max Stoiber,6,6,-1,4.4,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/110/thumb/EGH_JSAsync_1000.png,15,on
,Create linear data flow with container style types (Box)Refactor imperative code to a single composed expression using BoxEnforce a null check with composable code branching using EitherUse chain for composable error handling with nested EithersA collection of Either examples compared to imperative codeCreate types with SemigroupsSemigroup examplesEnsure failsafe combination using monoidsA curated collection of Monoids and their usesUnbox types with foldMapDelay Evaluation with LazyBoxCapture Side Effects in a TaskUse Task for Asynchronous ActionsYou've been using FunctorsLift into a Pointed Functor with ofYou've been using MonadsBuild curried functionsApplicative Functors for multiple arguments Apply multiple functors as arguments to a function (Applicatives)List comprehensions with Applicative FunctorsWrite applicatives for concurrent actionsLeapfrogging types with TraversableMaintaining structure whilst asyncingPrincipled type conversions with Natural TransformationsApply Natural Transformations in everyday workIsomorphisms and round trip data transformationsBuild a data flow for a real world appRetrieve and use data from an api with pure functional constructsFind the intersection of sets with Semigroups,en,https://egghead.io/courses/professor-frisby-introduces-composable-functional-javascript,Professor Frisby Introduces Composable Functional JavaScript,Brian Lonsdorf,6,29,-1,4.8,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/072/thumb/EGH_ComposableJS_Final.png,110,on
,Run the React Router v4 Examples with Create React AppCreate Basic Routes with the React Router v4 BrowserRouterUse the React Router v4 Link Component for Navigation Between RoutesStyle a Link that is Active with NavLink in React Router v4Use URL Parameters with React Router v4Use Regular Expressions with Routes with React Router v4Parse Query Parameters in React Router v4Render Catch-All Routes with React Router v4 using the Switch ComponentConditionally Render a React Router v4 Route with the Switch ComponentRender Multiple Components for the Same Route in React Router v4Render Nested Routes with React Router v4Redirect to Another Page with React Router v4Intercept Route Changes with React Router v4 Prompt ComponentUnderstand the Difference Between the React Router v4 Router Types,en,https://egghead.io/courses/add-routing-to-react-apps-using-react-router-v4,Add routing to React apps using React Router v4,Joe Maddalone,6,14,-1,4.4,8,"React,React Router",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/116/thumb/ReactRouter_V4-1000.png,42,on
,async / await using TypeScript Course OverviewSimplify Asynchronous Callback Functions using async/awaitPromise Fundamentals using TypeScriptWrite Async Functions with the async/await OperatorsExecute Promises in Parallel and Serial using async / awaitAsynchronous Iteration using for-await-of,en,https://egghead.io/courses/async-await-using-typescript,Async/Await using TypeScript,Basarat Ali Syed,6,6,-1,3.9,8,TypeScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/170/thumb/EGH_Async_TS.png,17,on
,Write a Higher Order Component from ScratchCompose Multiple Higher Order Components Together using RecomposeAdd Local State to a Functional Stateless Component using RecomposeAdd Local State with Redux-like Reducers using RecomposeAdd Lifecycle Hooks to a Functional Stateless Component using RecomposeTransform Props by using the Recompose mapProps Higher Order ComponentLock Props by using the Recompose withProps Higher Order ComponentFlatten a Prop using RecomposeShow a Spinner While a Component is Loading using RecomposeShow Error Messages based on Non-Optimal States with RecomposeRender Components Based on Predicates in RecomposeSet the HTML Tag of a Component via a Prop using RecomposeOptimize Expensive Computations in RecomposeOptimize Component Rendering using RecomposeLearn How Recompose Optimizes Higher Order Components,en,https://egghead.io/courses/higher-order-components-with-functional-patterns-using-recompose,Higher Order Components with Functional Patterns Using Recompose,Tim Kindberg,6,15,-1,4.4,8,"React,Recompose",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/114/thumb/EGH_ReactRecompose_Final.png,48,on
,"Setup a ""Hello World"" Server-Rendered Vue.js Application with the Vue-CLI and NuxtManage Vue.js State with Vuex and NuxtUpdate Vuex State with Mutations and MapMutations in Vue.jsAdd CSS Libraries to NuxtAdd Arrays of Data to the Vuex Store and Display Them in Vue.js TemplatesLoad Data from APIs with Nuxt and VuexUnderstand the Flash of Unstyled Content in NuxtHandle Load Errors in Nuxt with Alternate Data, Redirect, or Error LayoutNavigate with nuxt-link and Customize isClient Behavior in Nuxt and Vue.jsBuild a Navigation Component in Vue.js and Use in a Nuxt LayoutBuild a Vue.js Form then use Vuex Actions to Post to an API in NuxtUse Vuex Actions to Delete Data from APIs in Nuxt and Vue.jsUpdate State with Vuex Actions in Nuxt.jsDisplay Vuex Data Differently in Each Page of Nuxt and Vue.js",en,https://egghead.io/courses/build-a-server-rendered-vue-js-app-with-nuxt-and-vuex,Build a Server Rendered Vue.js App with Nuxt and Vuex,John Lindquist,6,14,-1,4.5,8,"Vue.js,vuex,Nuxt.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/111/thumb/EGH_VueJSNuxt_Final_1000.png,37,on
,"Create and Run a Native WebAssembly FunctionCompile C Code into WebAssemblyCall a JavaScript Function from WebAssemblyRead WebAssembly Memory from JavaScriptWrite to WebAssembly Memory from JavaScriptAllocate Dynamic Memory in WebAssembly with MallocCreate and Import a WebAssembly MemoryCompiling C/C++ to WebAssembly using LLVM, Binaryen and WABTClone and Build LLVM with the Experimental WebAssembly TargetInstall Binaryen and the WebAssembly Binary Toolkit (WABT)Typed Arrays in High Performance JavaScriptStep-by-Step JS to WebAssembly ConversionA First Comparison of the Performance between JS and WebAssemblyOptimize Collision Detection in JS with a GridSurpass JS Performance with Optimized Collision Detection in WASM using a Linked List Grid",en,https://egghead.io/courses/get-started-using-webassembly-wasm,Get Started Using WebAssembly (wasm),Guy Bedford,6,15,-1,4.5,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/130/thumb/EGH-WebAssembly_1000.png,56,on
,"Get up and running with CSS Grid LayoutPlace grid items on a grid using grid-column and grid-rowSpecify a grid gutter size with grid-gapDescribe a grid layout using named grid linesRefer to fractions of available space with the fr unitDescribe a grid layout using grid-template-areasUse the minmax function to specify dynamically-sized tracksUse the repeat function to efficiently write grid-template valuesUse auto-fill and auto-fit if the number of repeated grid tracks is not to be defChange the auto-placement behaviour of grid items with grid-auto-flowSpecify the sizes of implicitly created grid tracksRe-order the appearance of grid items using the order propertyNest a grid within a gridSpecify grid columns, rows, and areas at once with the grid-template shorthandSpecify many grid properties at once with the grid shorthand",en,https://egghead.io/courses/build-complex-layouts-with-css-grid-layout,Build Complex Layouts with CSS Grid Layout,Rory Smith,6,15,-1,4.5,8,CSS,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/107/thumb/EGH_CSS_Grids.png,42,on
,Install Development Tools for PreactConfigure Webpack 2 and Babel for use with PreactCreate a Hello World App with PreactDefine Functional Components in PreactDefine Stateful Components in PreactUse State and Props in the Component Render FunctionUse Link State to Automatically Handle State Changes Reduce the Size of a React App in Two Lines with preact-compatHandle Simple Routing with preact-routerIntegrate react-router with PreactIntegrate Redux with PreactUse Redux Dev-Tools with Preact,en,https://egghead.io/courses/up-and-running-with-preact,Up and running with Preact,Shane Osbourne,6,12,-1,4.4,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/117/thumb/EGH_Preact_Final.png,57,on
,Search the contents of files using grepSearch directory contents recursively using grepUse find to search for filename patternsSearch matching files by combining find and grep with xargsSearch the contents of a git repository with git grepShow context around matches using grepSearch for basic patterns using grepUse grep's extended regular expressions to find complex patternsSearch for optional patterns with grep ORSpecify line beginning and end in patterns using grepMatch classes of characters using bracket expressions with grepSearch with groups using grepFind matches excluding a pattern with grep,en,https://egghead.io/courses/use-grep-for-fast-search-from-the-command-line,Use Grep for Fast Search from the Command Line,Bonnie Eisenman,6,13,-1,4.6,8,grep,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/088/thumb/EGH_Grep_Final_Small.png,24,on
,Introducing Build a Server-rendered ReactJS application with Next.jsRender Text within a Server-side ReactJS App with Next.js Implement a custom Material-UI theme on the server using a Higher-order component Render Material-UI Components with Next.jsPopulate A Next.js Application with Data using Async/AwaitCreate custom routes within Next.js using ExpressJSDynamically Instantiate Routes on Id with Next.js & ExpressJSLeverage Next.js' getInitialProps lifecycle hook to load individual postsStyle Next.js Application's using CSS-in-JS and styled-jsxDeploy a Next.js Application to the web with the `now-cli`,en,https://egghead.io/courses/build-a-server-rendered-reactjs-application-with-next-js,Build a Server-rendered ReactJS Application with Next.js,Thomas Greco,6,10,-1,3.7,8,"React,Next.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/179/thumb/EGH_ReactNextServer_Final.png,31,on
,Start an Ionic 2 App with the CLIBuild your first page component with Ionic 2Use Sliding Gestures to Reorder an Ionic 2 ListUse the Ionic CLI to Generate Angular 2 Mobile ComponentsFetch data from an API using Angular 2 HTTP module Lazy Load Data with Ionic 2Navigate Between Mobile Screens  with the Ionic 2 NavControllerPreview an Angular 2 Mobile  App with Ionic LabCreate Angular 2 Mobile Card based layouts with Ionic 2Use Ionic 2 NavController to Manipulate App HistoryCreate an Overlay Component with the Ionic 2 Overlay APICreate a Native Mobile Side Menu Layout in Ionic 2,en,https://egghead.io/courses/building-apps-with-ionic-2,Building apps with Ionic 2,Mike Hartington,6,12,-1,4.3,8,"Angular,Ionic",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/095/thumb/EGH_Build_Ionic2_Final.png,30,on
,Prep HTML for Styling with Flat Class NamesKeep Styles Portable and Maintainable with Basic ClassesReduce Ambiguity in Class Names using a Naming ConventionStyle a Form with Plain CSSUnderstand Semantic Markup in relation to CSSUse CSS to Inform Users of InteractivityDraw Simple Icons with CSSUse Media Queries to Make an Existing Application ResponsiveInform the User of Interactions with CSS Transitions,en,https://egghead.io/courses/style-an-application-from-start-to-finish,Style an Application from Start to Finish,Garth Braithwaite,6,9,-1,4.3,8,CSS,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/057/thumb/EGH_StyleCSSApp_Final.png,41,on
,Add type safety to CSS using TypeStyleReusable styles using TypeStyle mixinsAdd responsive styles using TypeStyle Media QueriesStyle CSS pseudo-classes using TypeStyleStyle CSS pseudo elements with TypeStyleCompose CSS classes using TypeStyleUse TypeStyle keyframes to create CSS animationsLoad raw CSS in TypeStyleUse fallback values in TypeStyle for better browser supportGenerate static css + html files using TypeStyleRender HTML/CSS server-side using TypeStyle,en,https://egghead.io/courses/maintainable-css-using-typestyle,Maintainable CSS using TypeStyle,Basarat Ali Syed,6,11,-1,4.3,8,"CSS,TypeScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/115/thumb/EGH_CSSTypestyle-1000.png,34,on
,Bootstrap a React Application through the CLI with Create React AppRender a React UI with JSXRender a React UI Based on Initial StateSynchronize React UI and State with Controlled ComponentsCreate a Stateless Functional Component for an Input FormRefactor React Components to be Stateless Functional ComponentsValidate Component Input with Prop Types in ReactAdd Data to a List without MutationsUpdate React Application State from Form InputPrevent Empty Form Values with Conditional Submit HandlersUse ES2016 Property Initializer Syntax in ES6 classesUpdate Data in a List without MutationsPass Data To Event Handlers with Partial Function ApplicationCreate a Pipe Function to Enable Function CompositionRemove Items from a List without MutationsBuild a Link Component to Navigate to Routes in ReactUse React Context to Manage Application State Through RoutesFilter Data on Property Values in ReactKeep React Application State in Sync with Browser HistoryLoad Data for React from a Server with fetchSave Data to the Server with fetch in ReactShow Temporary Messages in a React ApplicationUpdate Data on the Server with fetch in ReactDelete Data on the Server with fetch in React,en,https://egghead.io/courses/build-your-first-production-quality-react-app,Build Your First Production Quality React App,Andy Van Slaars,6,24,-1,4.5,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/092/thumb/EGH_ProductReact-2.png,111,on
,Transpile SCSS to CSS using node-sassOrganize SCSS into Multiple Files with PartialsOrganize Styles with SCSS Nesting and the Parent SelectorUse SCSS Variables for Readable and Maintainable StylesheetsUse Standard Built-in SCSS Functions for Common Operations:Reuse Styles with the SCSS @mixin DirectiveReuse Styles with the SCSS @extend DirectiveWrite similar classes with the SCSS @for Control DirectiveLoop Over Data with the SCSS @each Control DirectiveWrite Custom Functions with the SCSS @function Directive,en,https://egghead.io/courses/learn-the-best-and-most-useful-scss,Learn the Best and Most Useful SCSS,Ari Picker,6,10,-1,4.4,8,SCSS,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/087/thumb/EGH_SCSS_Final.png,39,on
,"Draw in HTML CanvasAdd color to graphics using HTML Canvas Specifying Height and Width on the Canvas ElementDraw circles in HTML Canvas using .arcAdd strokes to circles using HTML CanvasUse HTML Canvas arcTo, moveTo, and lineTo to draw a piece of a pie chartAdd click interaction to HTML Canvas using JavaScript events",en,https://egghead.io/courses/create-graphics-with-html-canvas,Create Graphics with HTML Canvas,Alyssa Nicoll,6,7,-1,3.9,8,HTML 5,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/113/thumb/EGH_HTMLCanvas.png,24,on
,Construct a Stateful MonadMap And Evaluate State With A Stateful MonadSubstitute State Using Functions With A State MonadUpdate The State Of A State MonadModify The State Of A State MonadCombine Stateful Computations Using A State MonadCombine Stateful Computations Using CompositionApply Stateful Computations To FunctionsRefactor Stateful Code To Use A State Monad,en,https://egghead.io/courses/state-monad-in-javascript,State Monad in JavaScript,Ian Hofmann-Hicks,6,9,-1,4.1,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/177/thumb/EGH_MonadState_1000.png,45,on
,"Create a Basic Component using Vue.jsCreate a List Component in Vue.jsCreate Filters in Vue.jsUse Vue.js Component Computed PropertiesUse Vue.js Watchers to Respond to Async UpdatesUpdate Attributes, Classes and Styles in Vue.js with v-bindConditionally Render DOM Elements in Vue.js Handle DOM Events in Vue.js with v-onBind Values to Input Fields in Vue.jsBuild Reusable Vue.js ComponentsDynamic Vue.js Components with the component element",en,https://egghead.io/courses/develop-basic-web-apps-with-vue-js,Develop Basic Web Apps with Vue.js,Greg Thoman,6,11,-1,4.1,8,Vue.js,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/083/thumb/EGH_VueJS_Final.png,16,on
,Write an Angular DirectiveAdd Inputs to Angular DirectivesHandle Events with Angular DirectivesBuild a Directive that Tracks User Events in a Service in AngularCombine HostBinding with Services in Angular DirectivesUse Template Elements in AngularCreate Elements from Template Elements with ngTemplateOutlet in AngularWrite a Structural Directive in AngularImplement Structural Directive Data Binding with Context in AngularAssign a Structual Directive a Dynamic Context in AngularCreate a Template Storage Service in Angular,en,https://egghead.io/courses/understand-angular-directives-in-depth,Understand Angular Directives in Depth,John Lindquist,6,11,-1,4.5,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/091/thumb/EGH_A2_Directives_Final.png,28,on
,Get data from Elasticsearch by id using httpGet data from Elasticsearch by id using the Elasticsearch npm clientAdd data to ElasticsearchUpdate data in ElasticsearchSearch for data in Elasticsearch using the _search endpointPaginate through search results in ElasticsearchSearch Elasticsearch using Query ParametersSearch for data in Elasticsearch using queryDSL languageSearch for data in Elasticsearch using full text searchPerform analytics using Elasticsearch aggregation queriesCreate an index using the Elasticsearch APICreate an alias for an Elasticsearch indexClose and open an Elasticsearch indexDelete an index using the Elasticsearch APICreate a type and map in an indexBulk import data into ElasticsearchMonitor Elasticsearch cluster health and status with the _cat APIUnderstand the role of JVM heap in Elasticsearch performanceMonitor Elasticsearch cluster health and status with the _cluster and _nodes APIsReindex data from an existing Elasticsearch index,en,https://egghead.io/courses/get-started-with-elasticsearch,Get Started with Elasticsearch,Will Button,6,20,-1,4.5,8,elasticsearch,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/098/thumb/EGH_Elasticsearch_1000.png,97,on
,Target empty elements using the :empty pseudo-classTarget Positional Elements Using *-Of-Type CSS pseudo-classesCreate a fixed-fluid-fixed layout using CSS calc()Dynamically Size Elements with Pure CSS Easily Reset Styles With a Single CSS valueLayout Responsive Fluid Columns Using CSSControl Image Aspect Ratio Using CSS,en,https://egghead.io/courses/learn-advanced-css-layout-techniques,Learn Advanced CSS Layout Techniques,Damon Bauer,6,7,-1,4.3,8,CSS,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/081/thumb/EGH_Advanced_CSS_Layouts_Final.png,14,on
,Create a basic package.json fileRun the basic npm scriptsCreate a custom npm scriptRun npm scripts in seriesRun npm scripts in parallelUse a shorthand syntax for running multiple npm scripts with npm-run-allRun a set of similar npm scripts with a wildcardUse pre and post npm script lifecycle hooksPass arguments to npm scriptsPipe data from one npm script to anotherRun npm scripts when files change with onchangeUse package.json variables in npm scriptsUse custom config settings in your npm scriptsRun npm scripts with git hooksChange the level of console output when running npm scriptsMake npm scripts cross-environment friendlyList available npm scripts and support tab completionAdd comments to your npm scriptsPull out npm scripts into another file with p-sCreate a bash script to replace a complex npm scriptCreate a node script to replace a complex npm script,en,https://egghead.io/courses/how-to-use-npm-scripts-as-your-build-tool,How to Use npm Scripts as Your Build Tool,Elijah Manor,6,21,-1,4.3,8,"npm,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/100/thumb/EGH_NPM_Build_Final.png,52,on
,Why use TypeScript with ReactBootstrap a TypeScript + React projectCreate stateless React components using TypeScriptCreate stateful React Components using TypeScriptPublish a React component with TypeScriptTest React components and dom using EnzymeTest React Applications with Cypress,en,https://egghead.io/courses/use-typescript-to-develop-react-applications,Use TypeScript to develop React Applications,Basarat Ali Syed,6,7,-1,3.6,8,"React,TypeScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/162/thumb/EGH_ReactTS-01-02.png,27,on
,Set Up a Basic Twitter Bot with Twit.jsPost Statuses with Twit.jsWork with Users in Twit.jsInteract with Tweets with Twit.js Use the Twitter Search API with Twit.jsUse the Twitter Stream API with Twit.jsTweet Media Files with Twit.jsMake A Bot That Sounds Like You with RiTa.jsMake a Bot That Analyzes Human Emotions in Photos with Google Cloud Vision APIMake A Story Generation Bot with TraceryRetrieve And Tweet Information from Google SpreadsheetsMake a Twitter Audio Bot That Composes a Song Based on a TweetHost a Simple Twitter Bot Using HerokuHost a Complex Bot using Heroku and Docker,en,https://egghead.io/courses/create-your-own-twitter-bots,Create your own twitter bots,Hannah Davis,6,14,-1,4.5,8,"twit,Node.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/109/thumb/EGH_TwitterBots_Final.png,78,on
,Create a Horizontal Parallax ScrollView in React NativeAnimate a React Native Information Callout ViewBounce a Heart Shaped Button in React Native on PressCreate An Exploding Heart Button in React Native Build an Animated Floating Action Button  in React Native with Springy MenuUse React Native to Animate a Swipe Away Comment ModalCreate a Tap to Show Love React Native AnimationToggle Hidden Details on a React Native Event CardBuild a Collapsible React Native Header BarCreate an Expanding Notify Input with Success Message in React Native,en,https://egghead.io/courses/real-world-react-native-animations,Real World React Native Animations,Jason Brown,6,10,-1,4.5,8,React Native,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/096/thumb/EGH_React_Anim_Final.png,66,on
,Install and Configure D3 v4Convert Input Data to Output Values with Linear Scales in D3 v4Convert Dates to Numeric Values with Time Scales in D3 v4Create Labels from Numeric Data with Quantize Scales in D3 v4Create Labels from Non-numeric Data with Ordinal Scales in D3 v4Load and Inspect Data with D3 v4Select DOM Elements with D3 v4Modify DOM Elements with D3 v4Create DOM Elements with D3 v4Start Visualizing Data Driven Documents with D3 v4 Output SVG Elements with D3 v4SVG Graphics Containers and Text Elements in D3 v4Basic Interactivity with D3 v4Better Code Organization with selection.call() with D3 v4Margin Convention with D3 v4Create Chart Axes with D3 v4Make D3 v4 Charts Responsive with the viewBox attributeBuild a Column Chart with D3 v4Build a Scatter Plot with D3 v4Build a Line Chart with D3 v4Build an Area Chart with D3 v4Debug D3 v4 with Dev ToolsAnimate Transitions in D3 v4Reuse Transitions in D3 v4Animate with the General Update Pattern in D3 v4Animate Chart Axis Transitions in D3 v4,en,https://egghead.io/courses/build-interactive-javascript-charts-with-d3-v4,Build Interactive JavaScript Charts with D3 v4,Ben Clinkinbeard,6,26,-1,4.7,8,D3,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/077/thumb/EGH_JSCharts_D3_Final.png,157,on
,Output text in a browser using the text function in ElmInstall the Elm Platform command-line toolsWrite functions and Type Signatures in ElmStore key-value pairs using Records in ElmSequencing Data With Lists in ElmRender HTML in the browser using the Html module in ElmReuse Functions Through Type Variables in ElmCreate Apps Using the Elm Application ArchitectureDiscover New Packages Using the Elm Package Index,en,https://egghead.io/courses/start-using-elm-to-build-web-applications,Start Using Elm to Build Web Applications,Murphy Randle,6,9,-1,4.3,8,Elm,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/044/thumb/EGH_Elm_Final.png,30,on
,Redux: Simplifying the Arrow FunctionsRedux: Supplying the Initial StateRedux: Persisting the State to the Local StorageRedux: Refactoring the Entry PointRedux: Adding React Router to the ProjectRedux: Navigating with React Router <Link>Redux: Filtering Redux State with React Router ParamsRedux: Using withRouter() to Inject the Params into Connected ComponentsRedux: Using mapDispatchToProps() Shorthand NotationRedux: Colocating Selectors with ReducersRedux: Normalizing the State ShapeRedux: Wrapping dispatch() to Log ActionsRedux: Adding a Fake Backend to the ProjectRedux: Fetching Data on Route ChangeRedux: Dispatching Actions with the Fetched DataRedux: Wrapping dispatch() to Recognize PromisesRedux: The Middleware ChainRedux: Applying Redux MiddlewareRedux: Updating the State with the Fetched DataRedux: Refactoring the ReducersRedux: Displaying Loading IndicatorsRedux: Dispatching Actions Asynchronously with ThunksRedux: Avoiding Race Conditions with ThunksRedux: Displaying Error MessagesRedux: Creating Data on the ServerRedux: Normalizing API Responses with normalizrRedux: Updating Data on the Server,en,https://egghead.io/courses/building-react-applications-with-idiomatic-redux,Building React Applications with Idiomatic Redux,Dan Abramov,6,27,-1,4.7,8,"React,Redux",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/053/thumb/redux-solutions-react-sq.png,137,on
,"Redux: The Single Immutable State TreeRedux: Describing State Changes with ActionsRedux: Pure and Impure FunctionsRedux: The Reducer FunctionRedux: Writing a Counter Reducer with TestsRedux: Store Methods: getState(), dispatch(), and subscribe()Redux: Implementing Store from ScratchRedux: React Counter ExampleRedux: Avoiding Array Mutations with concat(), slice(), and ...spreadRedux: Avoiding Object Mutations with Object.assign() and ...spreadRedux: Writing a Todo List Reducer (Adding a Todo)Redux: Writing a Todo List Reducer (Toggling a Todo)Redux: Reducer Composition with ArraysRedux: Reducer Composition with ObjectsRedux: Reducer Composition with combineReducers()Redux: Implementing combineReducers() from ScratchRedux: React Todo List Example (Adding a Todo)Redux: React Todo List Example (Toggling a Todo)Redux: React Todo List Example (Filtering Todos)Redux: Extracting Presentational Components (Todo, TodoList)Redux: Extracting Presentational Components (AddTodo, Footer, FilterLink)Redux: Extracting Container Components (FilterLink)Redux: Extracting Container Components (VisibleTodoList, AddTodo)Redux: Passing the Store Down Explicitly via PropsRedux: Passing the Store Down Implicitly via ContextRedux: Passing the Store Down with <Provider> from React ReduxRedux: Generating Containers with connect() from React Redux (VisibleTodoList)Redux: Generating Containers with connect() from React Redux (AddTodo)Redux: Generating Containers with connect() from React Redux (FooterLink)Redux: Extracting Action Creators",en,https://egghead.io/courses/getting-started-with-redux,Getting Started with Redux,Dan Abramov,6,30,-1,4.7,8,"React,Redux",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/025/thumb/EGH_Redux-New.png,121,on
,Learn What A Window Function Can DoRank Records with Rank and Dense RankPerform Weighted Ranking with Percent RankDefine Windows Using Multiple FactorsFind Percentiles Using ntileCreate Running Totals Using Window FunctionsUnderstand Frame ClausesCompare Related Rows Using Lag and LeadCompare the Outliers Using First Value and Last ValueCombine Window Functions to Answer Complex Questions,en,https://egghead.io/courses/using-postgres-window-functions,Using Postgres Window Functions,Brett Cassette,6,10,-1,4.5,8,PostgreSQL,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/105/thumb/EGH_PostgreSQL-2_Final.png,19,on
,Create a Postgres TableInsert Data into Postgres TablesFilter Data in a Postgres Table with Query StatementsUpdate Data in PostgresDelete Postgres RecordsGroup and Aggregate Data in PostgresSort Postgres TablesEnsure Uniqueness in PostgresUse Foreign Keys to Ensure Data Integrity in PostgresCreate Foreign Keys Across Multiple Fields in PostgresEnforce Custom Logic with Check Constraints in PostgresSpeed Up Postgres Queries with IndexesFind Intersecting Data with Postgres¡¯ Inner JoinSelect Distinct Data in Postgres,en,https://egghead.io/courses/get-started-with-postgresql,Get Started With PostgreSQL,Brett Cassette,6,14,-1,4.3,8,PostgreSQL,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/104/thumb/EGH_PostgreSQL_Final.png,41,on
,Create a Basic Angular 2 ngModel InputCheck ngModel Validation in Angular 2Display Validation and Error Messaging in Angular 2Create and Submit an Angular 2 Form using ngFormGroup Inputs in Angular 2 Forms with ngModelGroupStyle Validation in Angular 2 FormsUnderstand the Angular 2 States of Inputs: Pristine and UntouchedUse RxJS Streams with Angular 2 FormsCreate Radio Buttons for Angular 2 FormsBuild Select Dropdowns for Angular 2 Forms,en,https://egghead.io/courses/learn-the-basics-of-angular-forms,Learn the Basics of Angular Forms,John Lindquist,6,10,-1,4.4,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/064/thumb/EGH_A2_Forms_Final.png,23,on
,Break up language strings into parts using NaturalFind the roots of words using stemming in NaturalPluralizing nouns and counting numbers with inflectors in NaturalFind sequences of words (n-grams) using NaturalTag parts of speech using NaturalCompare similarity of strings through string distance in NaturalClassify text into categories with machine learning in NaturalClassify JSON text data with machine learning in NaturalUsing machine learning classifiers in a new projectIdentify the most important words in a document using tf-idf in NaturalFind a word¡¯s definition using WordNet in NaturalSearch more efficiently with tries using NaturalInclude spell-check in text projects using NaturalCheck if words sound alike using Natural,en,https://egghead.io/courses/natural-language-processing-in-javascript-with-natural,Natural Language Processing in JavaScript with Natural,Hannah Davis,6,14,-1,4.3,8,"Natural,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/089/thumb/EGH_NaturalLangJS_Final.png,38,on
,Setup React Native for iOS and AndroidCreate the Basic React Native Todo Application LayoutCreate a React Native TextInputAdd a Toggle All Complete Button with React Native TouchableOpacityCreate a List of Items with a React Native ListViewAdd a Complete Toggle with React Native SwitchAdd a Remove Item Button to Each Row with React Native TouchableOpacityFilter Items in the React Native List ViewAdd the Total Remaining Item Count to the Footer with React Native TextAdd a Clear All Complete Button to the Footer with React Native TouchableOpacity Persist Items with React Native AsyncStorageAdd a Loading Indicator While Loading Items with React Native ActivityIndicatorInline Edit Todo Items in a React Native ListView,en,https://egghead.io/courses/build-a-react-native-todo-application,Build a React Native Todo Application,Jason Brown,6,13,-1,4.3,8,"React,React Native",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/090/thumb/EGH_ReactNative_ToDo-Final.png,44,on
,Deploy a Node project with Zeit¡¯s NowDeploy static assets with Zeit¡¯s NowDeploy a Docker project with Zeit¡¯s NowConfigure secrets and environment variables with Zeit¡¯s NowView source on your remote Zeit Now serverUse Zeit¡¯s Now to point a custom name to a specific deploymentSetup a custom domain name with Zeit¡¯s NowUse a hosted database with Zeit¡¯s Now,en,https://egghead.io/courses/deploy-web-apps-with-zeit-now,Deploy Web Apps with Zeit Now,mykola bilokonsky,6,8,-1,4.6,8,"Docker,now",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/086/thumb/EGH_ZeitNow_Final.png,44,on
,Consuming events as Observables in Angular 2Debounce the user input in Angular 2 using debounceTimePrevent unnecessary requests in Angular 2 with distinctUntilChangedCombine Observables in Angular 2 with flatMapDeal with out of order responses in Angular 2 using switchMapBuild fully reactive APIs in Angular 2 with Observables,en,https://egghead.io/courses/build-an-angular-instant-search-component,Build an Angular Instant Search Component,Christoph Burgdorf,6,6,-1,4.5,8,"Angular,RxJS",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/076/thumb/EGH_A2_Instasearch.png,11,on
,Create a GraphQL SchemaUse GraphQL Primitive TypesUse GraphQL's Object Type for Basic TypesUse GraphQL's List Type for CollectionsServe a GraphQL Schema as Middleware in ExpressWrite a GraphQL Schema in JavaScriptUse Arguments in a GraphQL QueryUse GraphQLNonNull for Required FieldsUse GraphQLList with GraphQLObject TypesWrite a GraphQL MutationCreate an Input Object Type for Complex MutationsAdd an Interface to a GraphQL SchemaAdd a Relay Node Interface to a GraphQL SchemaConvert GraphQL List Type to a Relay Connection TypeUse Relay¡¯s Input Object Mutations,en,https://egghead.io/courses/build-a-graphql-server,Build a GraphQL Server,Josh Black,6,15,-1,4.1,8,GraphQL,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/080/thumb/EGH_GraphQL_Final.png,57,on
,Angular 1.x Redux: IntroductionAngular 1.x Redux: Handle State Mutations with ReducersAngular 1.x Redux: Persist State with an Application StoreAngular 1.x Redux: Subscribe to the Application StoreAngular 1.x Redux: Create Reusable Actions with Action CreatorsAngular 1.x Redux: Integrate ngReduxAngular 1.x Redux: Handle Multiple Models by Combining ReducersAngular 1.x Redux: Put It All TogetherAngular 1.x Redux: Avoid State Mutation with Immutable OperationsAngular 1.x Redux: Map State and Dispatchers to ReduxAngular 1.x Redux: Handle Asynchronous Operations with MiddlewareAngular 1.x Redux: Test ReducersAngular 1.x Redux: Integrate Redux Devtools,en,https://egghead.io/courses/build-angular-1-x-apps-with-redux,Build Angular 1.x Apps with Redux,Lukas Ruebbelke,6,13,-1,4.8,8,"AngularJS,Redux",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/070/thumb/EGH_A1xRedux_Final.png,100,on
,Define an Angular Trigger and StateSwitch Between Angular States on a TriggerAnimate Between Angular States Using TransitionsControl Undefined Angular States with void StateAnimate Adding and Removing Angular Elements with ngIfDelay and Ease Angular AnimationsUse Keyframes for Fine-Tuned Angular AnimationsDefine Two-Way Transitions for Angular States,en,https://egghead.io/courses/animate-angular-web-applications,Animate Angular Web Applications,John Lindquist,6,8,-1,4.3,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/065/thumb/EGH_Angular_2_Animations.png,15,on
,Prepare for native iOS and Android api intellisense with NativeScriptUse an Objective C library in NativeScript for Angular iOS appUse Objective C Delegates in NativeScript for Angular iOS appsGenerate metadata TypeScript declarations for Objective C/Swift libraries on iOSUse an Android library in NativeScript for Angular using Java apisTranslate common Java/Android APIs into NativeScript for Angular Android appsDevelop a consistent plugin api across your Android and iOS NativeScript appConvert a Swift library to NativeScript for Angular iOS appsBuild a custom NativeScript view component for iOSBuild a custom NativeScript view component for AndroidDevelop a public NativeScript plugin using the nativescript-plugin-seedConditionally require a NativeScript plugin when only a single platform is supported,en,https://egghead.io/courses/use-objective-c-swift-and-java-api-s-in-nativescript-for-angular-ios-and-android-apps,"Use Objective C, Swift and Java api¡¯s in NativeScript for Angular iOS and Android apps ",Nathan Walker,6,12,-1,4.9,8,"NativeScript,Angular",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/106/thumb/EGH_AngularNS_Mobile_Final-01.png,69,on
,Introduction to Static TypingUsing Type Inference in TypeScriptUnion Types and Type Aliases in TypeScriptDistinguishing between types of Strings in TypeScriptUsing Interfaces to Describe Types in TypeScriptCreating a Class in TypeScript Sharing Class Behavior with Inheritance in TypeScript Using Assertion to Convert Types in TypeScriptThe Basics of Generics in TypeScriptPractical Generics in TypeScript,en,https://egghead.io/courses/use-types-effectively-in-typescript,Use Types Effectively in TypeScript,Ari Picker,6,10,-1,4.3,8,TypeScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/048/thumb/EGH_Typescript_Types.png,29,on
,Use Linear Regression To Estimate Continuous Values with Python and Scikit-learnPredict Categories in Python using Scikit-learn's Logistic Regression moduleUse Support Vector Machines To Find Complex Decision Boundaries with Scikit-learnUse K-nearest Neighbors To Find Similar Datapoints with Python and Scikit-learnImplement a Naive Bayes Classifier in Python and Scikit-learn to Categorize TextImplement Decision Trees in Python with Scikit-learnFind Clusters of Data with K-means Clustering in Python and Scikit-learn,en,https://egghead.io/courses/introductory-machine-learning-algorithms-in-python-with-scikit-learn,Introductory Machine Learning Algorithms in Python with scikit-learn,Hannah Davis,6,7,-1,3.7,8,"Scikit-Learn,python",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/168/thumb/EGH_PythonMachine_1000.png,33,on
,Understand Angular Dependency InjectionInject an Angular Service into a Component using ProvidersUse Provide and UseClass in Angular ProvidersUse Angular Factory ProvidersUse Angular Factory Providers with dependenciesUnderstand Angular @InjectableUse Angular Value ProvidersUnderstand OpaqueToken in Angular,en,https://egghead.io/courses/angular-dependency-injection-di-explained,Angular Dependency Injection (DI) Explained,Pascal Precht,6,8,-1,4.5,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/066/thumb/EGH_A2_DependencyEngine_Final.png,27,on
,Optimize SVGs for Better Performance using svgoInclude an SVG with an Image TagAdd an SVG as a Background ImageAdd an SVG as an Embedded Background ImageCombine Multiple SVGs into an SVG SpriteAdd an SVG Sprite as a Background ImageAutomate SVG Sprite Background Image Variations with a SCSS MixinEmbed SVG Directly In Markup with the ¡°Use¡± TagLoad an External SVG Inside a ¡°Use¡± TagStyle an SVG Icon with CSS Build an SVG icon component in React,en,https://egghead.io/courses/create-an-svg-icon-system,Create an SVG Icon System,Damon Bauer,6,11,-1,4.1,8,"SVG,HTML 5",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/094/thumb/EGH_SVGIcon_Final.png,28,on
,"Animate Styles of a React Native View with Animated.timingAnimate the Scale of a React Native Button using Animated.springCreate a Draggable Card with React Native Pan Responder, and Animated.decayAnimate Colors with React Native InterpolateAnimate Rotation with React Native InterpolateAnimate a Sequence of React Native Animations with Animated.sequenceStagger React Native Animations with Animated.staggerAnimate Multiple Animations at the Same Time with Animated.parallelCreate a Flip Card Animation with React Native",en,https://egghead.io/courses/animate-react-native-ui-elements,Animate React Native UI Elements,Jason Brown,6,9,-1,4.6,8,"React,React Native",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/085/thumb/EGH_ImageGallery_Final.png,25,on
,Set up a native mobile app using the NativeScript CLIPreview NativeScript apps in the iOS SimulatorPreview NativeScript Apps in the GenyMotion Android emulatorCreate native mobile views using NativeScript XMLStyle NativeScript views using CSSStyle NativeScript views using the default core themeEdit with live reloading using NativeScript livesyncAdd native mobile page navigation using Angular RouterAdd styles to active routes using nsRouterLinkActiveCreate a page title using ActionBarHandle back navigation when using page-router-outletOpen an Angular component in a native iOS and Android popup modalDisplay lists using NativeScript¡¯s ListView componentBind data to NativeScript Angular components using RxJS ObservablesIntegrate a custom NativeScript UI component plugin via npm and registerElementCreate a custom app theme using SASS for NativeScriptModify status bar colors on iOS and Android with NativeScriptUse the nativescript-themes plugin to switch app themes on the fly,en,https://egghead.io/courses/create-native-mobile-apps-with-nativescript-for-angular,Create Native Mobile Apps with NativeScript for Angular,Nathan Walker,6,18,-1,4.4,8,"Angular,NativeScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/084/thumb/EGH_AngularNativeScript_Final.png,43,on
,Understand what an HTTP Request isUnderstand what an HTTP Response isExamine HTTP Message BodiesUse HTTP GET & HEAD MethodsUnderstand 2xx HTTP Status Code ResponsesUnderstand HTTP 3xx Redirection Response CodesUnderstand HTTP 4xx Client Error Response CodesUnderstand 5xx Server Error Response CodesUse HTTP POST MethodUse HTTP DELETE MethodUse HTTP PATCH MethodUse HTTP OPTIONS Method,en,https://egghead.io/courses/understand-the-basics-of-http,Understand the Basics of HTTP,Pete Johanson,6,12,-1,3.9,8,HTTP,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/078/thumb/EGH_HTTP_Final.png,32,on
,"Sync the UI with the app state using MobX observable and observer in ReactAnalyze React components with MobX-React devtoolsDerive computed values and manage side effects with MobX reactionsUse observable objects, arrays, and maps to store state in MobXUse MobX actions to change and guard statePass observable data through props in MobXHandle user input and asynchronous actions with MobXConnect MobX observer components to the store with the React ProviderWrite custom MobX reactions with when and autorun",en,https://egghead.io/courses/manage-complex-state-in-react-apps-with-mobx,Manage Complex State in React Apps with MobX,Michel Weststrate,6,9,-1,4.2,8,"React,MobX",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/058/thumb/EGH_Mobx_Final.png,28,on
,Configure Your First Angular RouteMap a Second Angular Route to a ComponentBuild Angular Navigation with routerLinkLazy Load Angular Modules with the RouterStyle the Active Angular Navigation Element with routerLinkActiveUse Params from Angular Routes Inside of ComponentsUnderstand the Angular Base href RequirementBuild Dynamic Angular Navigation with ngForLoad Data to Build Angular NavigationLoad Data Based on Angular Route ParamsControl Rx Subscriptions with Async Pipe and BehaviorSubjects,en,https://egghead.io/courses/manage-ui-state-with-the-angular-router,Manage UI State with the Angular Router,John Lindquist,6,11,-1,4.5,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/063/thumb/EGH_A2_Router.png,31,on
,Create an Ember Project with the Ember-CLIEmber Templating with HTMLBarsAdd user interaction to Ember.js apps using actionsDefine Routes in Ember 2.0 using Ember-CLICreating nested routes in Ember.jsDefine Models for Routes in EmberCreate Simple Components in EmberUse Closure Actions with Ember ComponentsDebug Ember Applications using Ember Inspector,en,https://egghead.io/courses/ember-2-fundamentals,Ember 2 Fundamentals,Iheanyi Ekechukwu,6,9,-1,3.8,8,Ember.js,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/097/thumb/EGH_Ember2-1000.png,34,on
,Create an Angular 2 Hello World ComponentStructure a Basic Angular 2 ApplicationCreate Application-Specific Angular 2 ComponentsCreate Shareable Angular 2 ComponentsShare a Service Across Angular 2 Components and ModulesAngular 2 Smart Components vs Presentation ComponentsStyle Angular 2 ComponentsNesting Elements in Angular 2 Components with ng-content (AKA Angular 2 Transclusion)Select From Multiple Nested Angular 2 ElementsManipulate and Access DOM Elements with Angular 2 RendererGenerate Angular 2 Components Programmatically with entryComponentsSet Properties on Dynamically Created Angular 2 ComponentsOrder Dynamic Components Inside an Angular 2 ViewContainerMove and Delete Angular 2 Components After CreationGenerate and Render Angular 2 Template Elements in a  ComponentSet Values on Generated Angular 2 Templates with Template Context,en,https://egghead.io/courses/building-angular-components,Building Angular Components,John Lindquist,6,16,-1,4.4,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/056/thumb/EGH_AngularUI_Final.png,41,on
,Using flex-direction to layout content horizontally and verticallyUsing order to rearrange flexbox childrenDemystifying alignment in flexbox childrenDefining dimensions on flexbox children using flex-basisUsing flex-shrink and flex-grow to make flexbox children resize correctlyCombining the flexbox sizing properties using the flex shorthandTurning a flexbox into a grid using flex-wrap and align-contentUsing Flexbox in Websites and Applications,en,https://egghead.io/courses/flexbox-fundamentals,Flexbox Fundamentals,Garth Braithwaite,6,8,-1,4.4,8,"Flexbox,CSS",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/036/thumb/EGH_Flexbox.png,18,on
,Examine a Running App with the Chrome DebuggerExamine a Page's Source Resources with Chrome DevToolsUnbundle your JavaScript with Source Maps in Chrome DevToolsUse Snippets to Store Behaviors in Chrome DevToolsSet Breakpoints for the Chrome Debugger,en,https://egghead.io/courses/chrome-devtools-sources-panel,Debug JavaScript in Chrome with DevTool Sources,mykola bilokonsky,6,5,-1,4.3,8,"Chrome DevTools,JavaScript,Chrome",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/067/thumb/EGH_Chrome_Sources_Final.png,26,on
,Log Levels and Semantic MethodsAdvanced Console Log ArgumentsGrouping and Nesting Console Log OutputProper use of console.assert in JavaScriptUsing console.count to Count EventsLogging Timing Data to the ConsoleLogging Pretty-Printing Tabular Data to the Console,en,https://egghead.io/courses/js-console-for-power-users,Advanced Logging with the JavaScript Console,mykola bilokonsky,6,7,-1,4.5,8,"Chrome DevTools,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/038/thumb/EGH_JSPowerConsole_sq.png,21,on
,Chrome Devtools: Elements - Inspect Elements vs View SourceChrome Devtools: Elements - Make Changes in Your BrowserChrome Devtools: Elements - Debug with Style!Chrome Devtools: Elements - Console IntegrationUnderstand the Event Listeners PanelUse the Device Toolbar to Emulate Different ScreensUse DOM Break Points,en,https://egghead.io/courses/using-chrome-developer-tools-elements,Debug the DOM in Chrome with the Devtools Elements Panel,mykola bilokonsky,6,7,-1,4.4,8,"Chrome DevTools,HTML 5,Chrome",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/060/thumb/EGH_Chrome_Elements.png,33,on
,Introduction to GitHubExploring GitHubExploring a RepositoryHow to install Git SCMHow to authenticate with GitHub using SSHIdentifying How to Contribute to an Open Source Project on GitHubHow to Fork and Clone a GitHub RepositorySetting up the project locallyHow to create a Pull Request on GitHubHow to Collaborate on a Pull Request on GitHubHow to update a Pull Request on GitHubHow to rebase a git Pull Request branchHow to squash multiple git commitsGetting a Pull Request Merged and Wrapping up,en,https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github,How to Contribute to an Open Source Project on GitHub,Kent C. Dodds,6,14,-1,4.6,8,"git,GitHub",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/032/thumb/EGH_JSopensource_final.png,38,on
,Create an API with SwaggerCreate An API Schema Definition Using SwaggerDefine an HTTP GET Endpoint for a Node.js API Server with SwaggerDefine an HTTP POST Endpoint for a Node.js Server with SwaggerDefine an HTTP GET Endpoint with URL Parameters for a Node.js Server with SwaggerDefine an HTTP DELETE Endpoint for a Node.js API Server with SwaggerDefine an HTTP PUT Endpoint for a Node.js API Server with SwaggerMock API Responses with SwaggerCreate a Node.js function for an HTTP GET request for a Swagger APICreate a Node.js function for an HTTP POST request for a Swagger APICreate a Node.js function for an HTTP GET request with URL parametersCreate a Node.js function for an HTTP DELETE request for a Swagger APICreate a Node.js function for an HTTP PUT request for a Swagger APIConnect an existing React application to an API server created with SwaggerBuild Monitoring into your API ServerPerform Load Tests on an API Server using Apache jmeter,en,https://egghead.io/courses/build-node-js-apis-with-openapi-spec-swagger,Build Node.js APIs with OpenAPI Spec (Swagger),Will Button,6,16,-1,4.3,8,"OpenAPI,Node.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/071/thumb/EGH_NodeJSAPI_Swagger_Final.png,56,on
,Introduction to How to Write an Open Source JavaScript LibrarySetting up GitHubConfiguring npm and creating a package.jsonCreating the library and adding dependenciesPushing to GitHubPublishing to npmReleasing a version to GitHubReleasing a new version to npmPublishing a beta versionSetting up Unit Testing with Mocha and ChaiUnit Testing with Mocha and ChaiAutomating Releases with semantic-releaseWriting conventional commits with commitizenCommitting a new feature with commitizenAutomatically Releasing with TravisCIAutomatically running tests before commits with ghooksAdding code coverage recording with IstanbulAdding code coverage checkingAdd code coverage reportingAdding badges to your READMEAdding ES6 SupportAdding ES6 Support to Tests using Mocha and BabelLimit Built Branches on TravisAdd a browser build to an npm module,en,https://egghead.io/courses/how-to-write-an-open-source-javascript-library,How to Write an Open Source JavaScript Library,Kent C. Dodds,6,24,-1,4.8,8,GitHub,https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/276/thumb/github_logo.png,90,on
,Create Vertical/Horizontal Layouts with StackLayout Create an Absolute Positioned Layout Using AbsoluteLayout Add Responsive Wrapping Using WrapLayoutPosition Views in a Dock Using DockLayoutMake a Grid Layout Using GridLayouts Create Flex Based Containers Using FlexboxLayout,en,https://egghead.io/courses/build-basic-nativescript-app-templates,Build Basic NativeScript App Templates,Brad Martin,6,6,-1,3.8,8,NativeScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/103/thumb/EGH_NSLayout_Final.png,15,on
,Intro to VimMoving around in VimVim's different modesSaving Files in VimVim's built-in commandsCombining Vim commands Copy and Paste inside of VimConfigure VIMThe Vim Config fileIntroduction to Vim Plugins,en,https://egghead.io/courses/learn-to-use-vim,Learn to Use VIM,Mike Hartington,6,10,-1,4.2,8,Vim,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/045/thumb/EGH_Vim.png,13,on
,"Say ""Hello World"" to Angular 2Create a Simple Angular 2 ComponentManage Angular 2 Elements with Events and RefsControl Angular 2 Events with $event and Event HandlersShare Services and Data with Angular 2 Dependency InjectionProvide and Share Values with Angular 2 Dependency InjectionLoop Through Angular 2 Components with ngForPass Values into Angular 2 Components with @InputSync Values from Inputs with Angular 2¡¯s ngModel Two-Way BindingPass Events from Angular 2 Components with @OutputWrite CSS Inside of Angular 2 ComponentsApply CSS Classes Conditionally with Angular 2¡¯s ngClassUse Global CSS Inside Angular 2 Components",en,https://egghead.io/courses/get-started-with-angular,Get Started with Angular,John Lindquist,6,13,-1,4.2,8,Angular,https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/300/thumb/angular2.png,26,on
,Setting Up WebGLIntroduction to WebGL ShadersPassing Data to WebGL ShadersWebGL Vertex BuffersDrawing Arrays in WebGLLoading in WebGL ShadersAnimating WebGL VerticesUser Interaction in WebGL3D Transformation Matrices in WebGLUsing a Matrix Library for WebGL,en,https://egghead.io/courses/create-3d-graphics-in-javascript-using-webgl,Create 3D Graphics in JavaScript Using WebGL,Keith Peters,6,10,-1,4.5,8,"WebGL,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/061/thumb/EGH_WebGL_Final-b.png,48,on
,Transform an Array into a Single Value using ReduceReduce an Array into a Single ObjectUse Reduce to Filter and Map over Large DatasetsUse the Optional Reduce ArgumentsAvoid Common Mistakes when Working with ReduceLearn to Flatten and Flatmap Arrays with ReduceCompose Functions with ReduceSafely inspect nested objects with Reduce,en,https://egghead.io/courses/reduce-data-with-javascript-array-reduce,Reduce Data with Javascript Array#reduce,mykola bilokonsky,6,8,-1,4.8,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/028/thumb/EGH_ReduceDataJS.png,48,on
,Arrow Function => in ES6The let keyword in ES6Default Values for Function Parameters in ES6const Declarations in es6 (ES2015)Shorthand Properties in ES6Object Enhancements in ES6Using the ES6 spread operatorUse Template Literals in ES6Destructuring Assignment in ES6ES6 Modules (ES2015) - Import and ExportConverting an array-like object into an Array with Array.from()Promises with ES6ES6 (ES2015) - GeneratorsMaps and WeakMaps with ES6ES6 Parameter Object Destructuring with Required Values ES6 Rest Parameters,en,https://egghead.io/courses/learn-es6-ecmascript-2015,Learn ES6 (ECMAScript 2015),John Lindquist,6,16,-1,4.2,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/049/thumb/EGH_LearnES6_Final.png,53,on
,"Render an Observable with the Async PipeRender an Observable Date with the Async and  Date PipesHandle Click Events with SubjectsHandle Clicks and Intervals Together with MergeManage State in RxJS with StartWith and ScanMap Streams to Values to Affect StateUse ngrx/store and Reducers for Angular Application StateDispatch Action Types to ReducersDispatch Action Payloads to ReducersPass Template Input Values to ReducersPass Observables into Components with Async PipeAdd a Second Reducer to the StoreUse Two Reducers TogetherUse a Reducer to Change an Object's Property Inside an ArrayUse a Value from the Store in a ReducerReview of Angular 2, RxJS, and Reducers from ngrx/store",en,https://egghead.io/courses/build-redux-style-applications-with-angular-rxjs-and-ngrx-store,"Build Redux Style Applications with Angular, RxJS, and ngrx/store",John Lindquist,6,16,-1,4.3,8,"Angular,RxJS,NgRx",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/047/thumb/build-angular-app-redux-ngrx-sq.png,41,on
,"Accessible Icon ButtonsAccessible Button EventsBuilding Forms with Accessibility in MindHeadings and semantic structure for accessible web pagesFocus management using CSS, HTML, and JavaScriptWhat is the Accessibility Tree?Intro to ARIAHow Visible vs. Hidden Elements Affect Keyboard/Screen Reader UsersUsing the Voiceover screen reader to test for accessibilityTesting for Accessibility with the NVDA Screen Reader on WindowsCreating visual skip links in HTML and CSSAccessible modal dialogsUsing the tabindex attribute for keyboard accessibilityBasic accessibility testingAccessibility testing with axe-cliAccessible animations with reduced motionWhat is Accessible Name Calculation?",en,https://egghead.io/courses/start-building-accessible-web-applications-today,Start Building Accessible Web Applications Today,Marcy Sutton,6,17,-1,4.5,8,"ARIA,HTML 5",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/055/thumb/EGH_AccessibleWeb.png,127,on
,Introducing Angular 2 Concepts in Angular 1Compile an Angular Application Written in ES6Create a Top Level Angular Application ComponentStructure a Complex Angular Component using SubcomponentsBuild an Angular Component Controller Using ES6 ClassRefactor Angular Controller Logic to ServicesUse Dependency Injection with ES6 and Angular Container and Presentation Components Using Angular Component BindingsInitialize Angular Components with Lifecycle HooksBuild Lightweight Controllers by Binding to Models in AngularIsolate State Mutations in Angular ComponentsCommunicate State Changes in Angular with an Event BusTest an Angular Component with $componentController,en,https://egghead.io/courses/using-angular-2-patterns-in-angular-1-x-apps,Using Angular 2 Patterns in Angular 1.x Apps,Lukas Ruebbelke,6,13,-1,4.3,8,AngularJS,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/062/thumb/EGH_Ang2_Patterns.png,63,on
,Examine AJAX Requests with Chrome DevtoolsAnalyze HTTP Requests and Responses with Chrome DevtoolsFilter Requests in the Network Panel in Chrome DevtoolsTest Slow Network Performance with the Chrome DevtoolsAnalyze Overall Network Traffic Using Overview Tool in Chrome DevtoolsUnderstand HTTP Status Codes with the Chrome Devtools ,en,https://egghead.io/courses/debug-http-with-chrome-devtools-network-panel,Debug HTTP with Chrome DevTools Network Panel,mykola bilokonsky,6,6,-1,4.1,8,"Chrome DevTools,Chrome",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/069/thumb/EGH_Chrome_Network_Final.png,25,on
,Starting a Stream with SwitchMapStopping a Stream with TakeUntilUpdating Data with ScanDisplaying Initial Data with StartWithChanging Behavior with MapToHandling Multiple Streams with MergeRefactoring Composable Streams in RxJSGetting Input Text with MapCombining Streams with CombineLatestAdding Conditional Logic with FilterCompleting a Stream with TakeWhileHandling a Complete Stream with ReduceLogging a Stream with DoTimer and Input RecapRefactoring CombineLatest to WithLatestFromResubscribing to a Stream with RepeatBasic DOM Rendering with SubscribeSharing Streams with Share,en,https://egghead.io/courses/step-by-step-async-javascript-with-rxjs,Step-by-Step Async JavaScript with RxJS,John Lindquist,6,18,-1,4.5,8,RxJS,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/035/thumb/EGH_RxJSStepbyStep_Final.png,45,on
,Use Concat to Add Values to an ArrayCombine Values of an Array into a String with JoinCheck if a Value is in an Array with indexOfCreate a Shallow Copy of an Array with SliceSort an Array Alphabetically or Numerically Filter an Array with Truthy ValuesUse Some as a Ternary Operator or ConditionalAdd Elements onto an Array with PushModify Values in an Array with MapValidate Data with the Every() MethodProduce a single value from an Array with reduce,en,https://egghead.io/courses/understand-javascript-arrays,Understand JavaScript Arrays,Shane Osbourne,6,11,-1,4.6,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/021/thumb/EGH_JSarrays.png,70,on
,"React Router: Development Environment SetupReact Router: Router, Route, and LinkReact Router: hashHistory vs browserHistoryReact Router: activeStyle & activeClassNameReact Router: Nested RoutesReact Router: IndexRouteReact Router: Route ParametersReact Router: Named ComponentsReact Router: Querystring ParametersReact Router: RedirectReact Router: setRouteWillLeaveHook",en,https://egghead.io/courses/getting-started-with-react-router-v3,Getting Started with React Router v3,Joe Maddalone,6,11,-1,4.4,8,"React,React Router",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/043/thumb/EGH-React-Router.png,26,on
,Angular Material: Installing with NPMAngular Material: Containers with the Layout APIAngular Material: Intro to UI ComponentsAngular Material: UI Components with Dynamic DataAngular Material: Using a BottomSheetAngular Material: Adaptive LayoutsAngular Material: Theming and ARIA,en,https://egghead.io/courses/introduction-to-angular-material,Introduction to AngularJS Material,Aaron Frost,6,7,-1,4.3,8,"AngularJS,Angular Material",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/033/thumb/egghead-angular-material-course-sq.png,29,on
,Intro to the Production Webpack CourseValidate your Webpack config with webpack-validatorTree shaking with Webpack 2Polyfill Promises for Webpack 2Maintain sane file sizes with webpack code splittingHashing with Webpack for long term cachingGrouping vendor files with the Webpack CommonsChunkPluginOptimize React size and performance with Webpack production pluginsChunking common modules from multiple apps with the Webpack CommonsChunkPluginImport a non-ES6 module with WebpackExpose modules to dependencies with WebpackInitialize a Webpack Project with Karma for TestingUse Chai assertions for tests in a Karma projectUse Karma for Unit Testing with WebpackAdd Code Coverage to tests in a Webpack projectEnsure all source files are included in test coverage reports with Webpack,en,https://egghead.io/courses/use-webpack-2-for-production-javascript-applications,Use Webpack 2 for Production JavaScript Applications,Kent C. Dodds,6,16,-1,4.3,8,webpack,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/054/thumb/EGH_Webpack-Final.png,64,on
,"AngularJS with Webpack - IntroductionAngularJS with Webpack - Requiring DirectivesAngularJS with Webpack - ES6 with BabelJSAngularJS with Webpack - Requiring TemplatesAngularJS with Webpack - Requiring CSS & PreprocessorsAngularJS with Webpack - Testing with Karma, Mocha, and ChaiAngularJS with Webpack - Production SetupAngularJS with Webpack - Uglifying your JavaScriptAngularJS with Webpack - Production Source MapsUpdating Babel 5 to 6",en,https://egghead.io/courses/angularjs-and-webpack-for-modular-applications,AngularJS and Webpack for Modular Applications,Kent C. Dodds,6,10,-1,4.8,8,"AngularJS,webpack",https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/002/thumb/angularjs.png,43,on
,Get Started with Regular Expressions in JavaScriptFind Plain Text Patterns using Regular ExpressionsUse Regular Expressions to Find Repeated PatternsUse Character Classes in Regular ExpressionsUse Shorthand Regular Expression Character ClassesCreate Capture Groups in Regular ExpressionsUse Lookaheads in Regular ExpressionsFind the Start and End of Words with Regular Expression Word BoundariesMatch the Same String Twice with Backreferences in Regular ExpressionsFind Patterns at the Start and End of Lines with Line Anchors in Regular Expressions,en,https://egghead.io/courses/regex-in-javascript,Regex in Javascript,Joe Maddalone,6,10,-1,4.6,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/029/thumb/course_image.png,31,on
,Apply varying colors per-vertex to WebGL trianglesConsolidate data into a single WebGL vertex arrayFix clipping and aspect ratio by implementing perspective in WebGLDraw a complex 3D Model with WebGL Triangle StripsDraw more complex 3D Models using Triangle Fans in WebGLDraw a multicolored cube with WebGL drawElementsUse an image to texture a WebGL objectCreate a directional light source in WebGL,en,https://egghead.io/courses/build-complex-3d-models-with-webgl,Build Complex 3D models with WebGL,Keith Peters,6,8,-1,4.5,8,"WebGL,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/073/thumb/EGH_IntermedWebGL_Final_2.png,54,on
,hapi.js - Up and runninghapi.js - Logging with good and good-consolehapi.js - Route parametershapi.js - Replying to Requestshapi.js - Using the response objecthapi.js - Serving static fileshapi.js - View engines hapi.js - POST and PUT request payloadshapi.js - Extending the request with lifecycle eventshapi.js - Friendly error pages with extension eventshapi.js - Request Validation with Joihapi.js - Managing State with Cookies,en,https://egghead.io/courses/introduction-to-node-servers-with-hapi-js,Introduction to Node Servers with Hapi.js,Mike Frey,6,12,-1,4.3,8,"hapi.js,Node.js",https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/384/thumb/hapi-logo-1.png,27,on
,The Array forEach methodThe Array map methodThe Array filter methodChaining the Array map and filter methodsCreate an Array concatAll methodIntroducing the ObservableUsing the map method with ObservableSimple drag and drop with ObservablesAdvanced Flattening,en,https://egghead.io/courses/asynchronous-programming-the-end-of-the-loop,Asynchronous Programming: The End of The Loop,Jafar Husain,6,9,-1,4.4,8,"RxJS,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/011/thumb/EGH_Asyncintro_Final.png,59,on
,Create a Basic Server with ExpressDefine dynamic routes through ExpressUse Template Engines with ExpressServe static files with expressSave and Delete Content in Express with HTTP VerbsHandle Errors with a Redirect in ExpressOrganize Code by Subpath in ExpressUse Streams in ExpressHandle Errors with Express MiddlewareIntegrate MongoDB into your Express AppUse virtual properties with Mongoose and MongoDB,en,https://egghead.io/courses/getting-started-with-express-js,Getting Started with Express.js,Ben Clinkinbeard,6,11,-1,4.3,8,"Express,Node.js",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/018/thumb/course_image.png,64,on
,React Testing: Setting up dependenciesReact Testing: Running testsReact Testing: Utility modulesReact Testing: Intro to Shallow RenderingReact Testing: JSX error diffsReact Testing: Element types with Shallow RenderingReact Testing: className with Shallow RenderingReact Testing: Conditional className with Shallow RenderingReact Testing: Reusing test boilerplateReact Testing: Children with Shallow RenderingReact Testing: The Redux Store - Multiple ActionsReact Testing: The Redux Store - Initial StateReact Testing: Redux Reducers,en,https://egghead.io/courses/react-testing-cookbook,React Testing Cookbook,Trevor Miller,6,13,-1,4.0,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/027/thumb/course_image.png,38,on
,Use the Node.js REPL shellUnderstand Callbacks in Node.jsUnderstand the Node.js process objectUnderstand Node.js BuffersUnderstand Global Namespace in Node.jsCreate a Simple Node.js ModuleExport Modules in Node.jsInstall packages in a Node.js application using npmCreate a TCP server using the Node.js Net ModulePublish and Share a Node.js ModuleBuild a Simple HTTP Server with Node.jsPublish a Module to the NPM RegistryAdd and Remove EventEmitters in Node.jsManage Memory and Garbage Collection in Node.js,en,https://egghead.io/courses/introduction-to-node-the-fundamentals,Introduction to Node: The Fundamentals,Will Button,6,14,-1,4.0,8,Node.js,https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/256/thumb/nodejslogo.png,84,on
,"Use create-react-app to Setup a Simple React AppWrite a ""Hello World"" React ComponentDisplay Output in React with a Component's render MethodSet Properties on React ComponentsManage React Component State with setStateUse React Components as Children for Other ComponentsAccess Nested Data with Reacts props.childrenAdd Custom propType Validation to React ComponentsNormalize Events with Reacts Synthetic Event SystemUse React ref to Get a Reference to Specific ComponentsUnderstand the React Component Lifecycle MethodsManage React Component State with Lifecycle MethodsControl React Component Updates When New Props Are ReceivedUse map to Create React Components from Arrays of DataCompose React Component Behavior with Higher Order ComponentsBuild a JSX Live Compiler as a React ComponentUnderstand JSX at a Deeper LevelUnderstand React.Children UtilitiesUse React.cloneElement to Extend Functionality of Children ComponentsWrite More Reusable React Components with Composable APIsDebug React Components with Developer Tools in Chrome",en,https://egghead.io/courses/start-learning-react,Start Learning React,Joe Maddalone,6,21,-1,4.3,8,React,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/003/thumb/course_image.png,66,on
,Get Started With D3Basics of SVGScaling Basicsd3.maxrangeBandsColor ScalesQuantitative ScalesMarginsScatter PlotDebugging with Dev ToolsBasic D3 chart interactivityBasic Transitions with D3Creating Axes with D3Cleaner D3 code with selection.call()Line and Area Charts with D3Responsive D3 charts with the viewBox attribute,en,https://egghead.io/courses/use-d3-v3-to-build-interactive-charts-with-javascript,Use D3 (v3) to Build Interactive Charts with JavaScript,Ben Clinkinbeard,6,16,-1,4.3,8,D3,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/001/thumb/course_image.png,77,on
,Flux Architecture: Overview and Project SetupFlux Architecture: Application DispatcherFlux Architecture: Application ActionsFlux Architecture: Application StoreFlux Architecture: Components/ViewsFlux Architecture: Higher-Order ComponentsFlux Architecture: Project OrganizationFlux Architecture: Routing with react-router 1.0Flux Architecture: Component Wrap UpFlux Architecture: Dumb Stores,en,https://egghead.io/courses/react-flux-architecture-es6,React: Flux Architecture (ES6),Joe Maddalone,6,10,-1,4.2,8,"React,Flux",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/024/thumb/EGH_reactflux.png,49,on
,Create a Custom Element using PolymerUse Lifecycle Callbacks On Custom Polymer ElementsStyle Custom Elements in PolymerExtend Native HTML Elements with PolymerUnderstand Declared Property Basics in PolymerData Bind Two Polymer ElementsObserve Property Changes on a Custom Polymer ElementCreate Event Listeners in Polymer ElementsExecute Custom Events in PolymerIterate over a Collection with Polymer's dom-repeate,en,https://egghead.io/courses/creating-custom-web-elements-with-polymer-2,Creating Custom Web Elements with Polymer 2,Joe Maddalone,6,10,-1,4.1,8,Polymer,https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/385/thumb/polymerjs.png,38,on
,Introduction to the HTML Canvas elementDrawing Paths - Lines and RectanglesDrawing Paths - Curves and ArcsDrawing Styles on HTML5 CanvasGradient Fills on the HTML5 CanvasDrawing Text on CanvasHTML Canvas and ImagesCanvas EffectsCanvas TransformationsCanvas and PixelsListening for Mouse and Keyboard Events with HTML CanvasAnimating with Canvas,en,https://egghead.io/courses/learn-html5-graphics-and-animation,Learn HTML5 Graphics and Animation,Keith Peters,6,12,-1,4.5,8,HTML 5,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/010/thumb/HTML5_Graphics.png,84,on
,Introduction to Building an AngularJS AppBootstrap AngularJS into a Static HTML fileDynamically Display Data with AngularJS ControllersCreate a Filter with AngularJSManage Simple State in an AngularJS ControllerSubmit content in a form with AngularJS ng-submit and ng-modelModify State with ng-model and an AngularJS controllerDelete an item from a collection in AngularJSBuilding an Angular App: Eggly Review,en,https://egghead.io/courses/angularjs-fundamentals,AngularJS Fundamentals,Lukas Ruebbelke,6,9,-1,4.4,8,AngularJS,https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/002/thumb/angularjs.png,52,on
,Introduction to AngularJS Architecture SeriesStructure Files for an AngularJS ApplicationOrganize Code with Sub-Modules into an AngularJS ApplicationAngularJS Architecture: Basic State with ui-routerAngularJS Architecture: Using ui-router's named viewsAngularJS Architecture: ui-router state params for sharing informationAngularJS Architecture: navigating between states with ui-routerAngularJS Architecture: Prefer the 'controller as' syntaxAngularJS Architecture: Refactor to a data modelAngularJS Architecture: Using $http to load JSON dataAngularJS Architecture: Control your promises with $qAngularJS Architecture: Edit and Create Bookmark StatesAngularJS Architecture: Create BookmarkAngularJS Architecture: Edit BookmarkAngularJS Architecture: Delete BookmarkAngularJS Architecture: Animate state transitions with ui-routerAngularJS Architecture: Review,en,https://egghead.io/courses/angularjs-application-architecture,AngularJS Application Architecture,Lukas Ruebbelke,6,17,-1,4.4,8,AngularJS,https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/002/thumb/angularjs.png,101,on
,JSON Web Token (JWT) IntroductionBasic Server Setup for JWT AuthenticationClient Setup for JWT AuthenticationJWT Authentication SetupServer JWT Authentication SetupAuth Interceptor in Angular for JWTFinalizing JWT Authentication with AngularJS,en,https://egghead.io/courses/angularjs-authentication-with-jwt,AngularJS Authentication with JWT,Kent C. Dodds,6,7,-1,4.4,8,"AngularJS,JWT",https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/002/thumb/angularjs.png,31,on
,Start Building a React Native ApplicationSet up Basic iOS Routing with React NativeUse State and Touch Events in React NativeUnderstand the fetch APIUse Fetch to Load External Data in React NativePass Data when Changing Routes in React NativeUse React Native's Error Handle and ActivityIndicatiorIOSUse Images in a React Native ApplicationUse propTypes in Reusable React Native ComponentsCreate a Scrollable React Native Component with ScrollViewBuild a Reusable React Native UI ComponentBuild a Github Repositories Component in React NativeNavigate to a React Native componentAccess Web Pages through React Native's WebView ComponentPersist data in React Native with Firebase REST APIBuild a View with React Native's ListView ComponentComplete the Notes view in React Native,en,https://egghead.io/courses/react-native-fundamentals,React Native Fundamentals,Tyler McGinnis,6,17,-1,4.1,8,"React,React Native",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/014/thumb/course_image.png,87,on
,Getting Started With ProtractorTest Simple Binding With ProtractorTesting With Protractor Page ObjectsProtractor InteractiveProtractor: Running tests on multiple browsersUsing Protractor to Test Mobile Safari with Appiume2e Testing AngularJS Apps with Protractor and SauceLabsLocators and Suites in ProtractorAutomated screenshots of your e2e Protractor testsUse protractor to catch errors in the console,en,https://egghead.io/courses/learn-protractor-testing-for-angularjs,Learn Protractor Testing for AngularJS,Joel Hooks,6,10,-1,4.6,8,"AngularJS,Protractor",https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/002/thumb/angularjs.png,48,on
,Angular Automation: Introduction to GulpAngular Automation: Installing Gulp Globally and LocallyAngular Automation: Gulp TasksAngular Automation: Copy Assets with GulpAngular Automation: Gulp InjectAngular Automation: Gulp ServeAngular Automation: Gulp ConfigAngular Automation: Gulp Watch,en,https://egghead.io/courses/angular-automation-with-gulp,Angular Automation with Gulp,Lukas Ruebbelke,6,8,-1,4.0,8,"AngularJS,Gulp",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/012/thumb/EGH_Angular_Automation_Final.png,34,on
,Manage Application State with Immutable.jsCreating an Immutable Object Graph with Immutable.js Map()Modifying an Immutable.js Map()Querying an Immutable.js Map()Iterating Over an Immutable.js Map()Working with Subsets of an Immutable.js Map()Equality Checking with .is() and MoreUsing fromJS() to Convert Plain JavaScript Objects into Immutable DataDifferences between the Immutable.js Map() and List()Exploring Sequences and Range() in Immutable.jsConverting Immutable.js Structures to Javascript and other Immutable TypesSimple Undo/Redo with Immutable.js Data StructuresMaintaining Order in Immutable.js ObjectsTransforming Immutable Data with ReduceLightning Fast Immutable.js Equality Checks with Hash CodesImmutable.Record() as data models,en,https://egghead.io/courses/learn-how-to-use-immutable-js,Learn how to use Immutable.js,J.S. Leonard,6,16,-1,3.9,8,"Immutable.js,JavaScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/022/thumb/EGH_Immutablejs_Final.png,91,on
,Introducing Design Systems with React and Typescript in StorybookSet up Storybook for React from ScratchAdd your first React Story to StorybookAdd a Welcome Page with Sequential Stories to a React StorybookDisplay the JSX of a React Storybook Story with the JSX AddonApply Style to a React StoryBook with the Info addon to Turn Stories into DocumentationCreate Interactive Storybook Stories with the Knobs DecoratorConfigure React Storybook for use with TypescriptAutomate Documentation Generation in your Typescript React Codebase with Storybook,en,https://egghead.io/courses/design-systems-with-react-and-typescript-in-storybook,Design Systems with React and Typescript in Storybook,Shawn Wang,6,9,-1,4.1,8,"React,React Storybook,TypeScript",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/228/thumb/EGH_ReactStorybook_Final.png,16,on
,Using $resource for Data ModelsCreate a Model Base ClassModel CachingAdd Caching to the Model Base ClassRefactor The Model Base Class with MixinsModel Validation Design ReviewBasic Implementation of Configurable ValidationsAdding Child ValidatorsValidations ClassMixing in ValidatableErrorable MixinFinishing ValidatableSerializing and Deserializing Data Models in AngularJS,en,https://egghead.io/courses/angularjs-data-modeling,AngularJS Data Modeling,Brett Cassette,6,13,-1,2.1,8,AngularJS,https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/002/thumb/angularjs.png,104,on
,GIF Loop Coder - IntroductionGIF Loop Coder - Animating with ArraysGIF Loop Coder - InterpolationGIF Loop Coder - Animation FunctionsColors in GIF Loop CoderShape Objects in GIF Loop CoderParenting in GIF Loop CoderGIF Loop Coder Single ModeThe Phase Property in GIF Loop CoderOutputting Animations from GIF Loop CoderCustom Drawing in GIF Loop Coder,en,https://egghead.io/courses/gif-loop-coder-for-creating-animation,GIF Loop Coder for Creating Animation,Keith Peters,6,11,-1,5.0,8,JavaScript,https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/042/thumb/EGH_GIFLooper.png,61,on
,Setting Up your Mac with Ionic and CordovaInstalling Node.js and NPM on WindowsIonic Quickstart for Windows: Installing IonicCreating an Ionic AppBuild and Run an iOS App on a MacBuild and Run an Android Application with Ionic on a MacInstall Ant for IonicInstall Android SDK for IonicInstall the Genymotion Android Emulator for IonicInstall the Java Developer Kit (JDK) for IonicRun Your First Ionic AppEdit Your Ionic Application CodeDeploy Your Ionic App to a DeviceUpload and Share an Ionic App,en,https://egghead.io/courses/ionic-quickstart-for-windows-and-mac,Ionic Quickstart for Windows and Mac,Lukas Ruebbelke,6,14,-1,5.0,8,"AngularJS,Ionic",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/016/thumb/EGH_AngularQuickStart.png,39,on
,"Build and Run an Ionic App from ScratchConvert a Web Application into an Ionic AppBuild, Emulate, and Debug an Ionic AppDevice Interaction in an Ionic App with Cordova PluginsPrepare an Ionic App for Ionic Components and StylingBuild a Sidebar Layout with IonicBuild a Powerful List with IonicCreate Modals with IonicConvert a UI Route into an Angular Directive",en,https://egghead.io/courses/building-an-angular-1-x-ionic-application,Building an Angular 1.x Ionic Application,Lukas Ruebbelke,6,9,-1,5.0,8,"AngularJS,Ionic",https://d2eip9sf3oo6c2.cloudfront.net/series/square_covers/000/000/031/thumb/egghead-angular-ionic-course-sq.png,52,on
